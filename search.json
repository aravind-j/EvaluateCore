[{"path":"https://aravind-j.github.io/EvaluateCore/articles/EvaluationofCoreCollections.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Evaluation of Core Collections with `EvaluateCore`","text":"core collection “limited set accessions representing, minimum repetitiveness, genetic diversity crop species wild relatives”(Frankel, 1984). case several large unwieldy germplasm collections conserved genebanks, development several core collections facilitated increasing efficiency characterisation turn utilisation. different criteria available evaluating core collections comparing original collections sampled. choice suitable evaluation criteria dictated objectives core collection. Several criteria including distance based metrics described Odong et al. (2013) implemented EvaluateCore document shows use . document assumes basic knowledge R programming language.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/articles/EvaluationofCoreCollections.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Evaluation of Core Collections with `EvaluateCore`","text":"package can installed using following functions: package can loaded using function","code":"# Install from CRAN install.packages('EvaluateCore', dependencies=TRUE)  # Install development version from Github devtools::install_github(\"aravind-j/EvaluateCore\") library(EvaluateCore) -------------------------------------------------------------------------------- Welcome to EvaluateCore version 0.1.3.9000   # To know whats new in this version type:   news(package='EvaluateCore')   for the NEWS file.  # To cite the methods in the package type:   citation(package='EvaluateCore')  # To suppress this message use:   suppressPackageStartupMessages(library(EvaluateCore)) --------------------------------------------------------------------------------"},{"path":"https://aravind-j.github.io/EvaluateCore/articles/EvaluationofCoreCollections.html","id":"version-history","dir":"Articles","previous_headings":"","what":"Version History","title":"Evaluation of Core Collections with `EvaluateCore`","text":"current version package 0.1.3. previous versions follows. Table 1. Version history EvaluateCore R package. know detailed history changes use news(package='EvaluateCore'). Table 2 : Core evaluation methods implemented EvaluateCore.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/EvaluateCore/articles/additional/Example_Core_Data.html","id":"introduction","dir":"Articles > Additional","previous_headings":"","what":"Introduction","title":"Example Datasets in `EvaluateCore`","text":"example datasets cassava_EC cassava_CC EvaluateCore demonstrating various functions generated using following steps source data (International Institute Tropical Agriculture et al., 2019).","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/articles/additional/Example_Core_Data.html","id":"setup-the-environment","dir":"Articles > Additional","previous_headings":"","what":"Setup the environment","title":"Example Datasets in `EvaluateCore`","text":"","code":"# Increase rJava memory allocation options(java.parameters = \"-Xmx8G\") rJava::J(\"java.lang.Runtime\")$getRuntime()$maxMemory() / (1024^3) # Load required packages library(readxl) library(corehunter) ## Loading required package: rJava"},{"path":"https://aravind-j.github.io/EvaluateCore/articles/additional/Example_Core_Data.html","id":"load-and-prepare-data","dir":"Articles > Additional","previous_headings":"","what":"Load and prepare data","title":"Example Datasets in `EvaluateCore`","text":"","code":"# Load the raw data # Source : https://www.genesys-pgr.org/datasets/929a273d-7882-43eb-8b1a-86032cbeb892 cassava_EC <- read_excel(\"IITA-Cassava collection-Cassava characterization dataset.xls\")  sel <- c(\"Accession name\",          \"Colour of unexpanded apical leaves\",          \"Length of stipules\",           \"Petiole colour\", \"Distribution of anthocyanin\",          \"Leaf retention\",           \"Level of branching at the end of flowering\",          \"Colour of boiled tuberous root\",          \"Number of levels of branching\",          \"Angle of branching\",          \"Colours of unexpanded apical leaves at 9 months\",           \"Leaf vein colour at 9 months\",          \"Total number of plants remaining per accession at 9 months\",           \"Petiole length at 9 months\",          \"Storage root peduncle\",          \"Storage root constrictions\",          \"Position of root\", \"Number of storage root per plant\",          \"Total root number per plant\",          \"Total fresh weight of storage root per plant\",          \"Total root weight per plant\",          \"Total fresh weight of storage shoot per plant\",          \"Total shoot weight per plant\",          \"Total plant weight\",          \"Average plant weight\",          \"Amount of rotted storage root per plant\",           \"Storage root dry matter\")  cassava_EC <- cassava_EC[, sel]  str(cassava_EC) ## tibble [2,170 × 27] (S3: tbl_df/tbl/data.frame) ##  $ Accession name                                            : chr [1:2170] \"TMe-1915\" \"TMe-1\" \"TMe-2\" \"TMe-3\" ... ##  $ Colour of unexpanded apical leaves                        : chr [1:2170] \"Dark green\" \"Light green\" \"Light green\" \"Dark green\" ... ##  $ Length of stipules                                        : chr [1:2170] \"Medium\" \"Short\" \"Long\" \"Medium\" ... ##  $ Petiole colour                                            : chr [1:2170] \"Green purple\" \"Purple\" \"Green purple\" \"Purple\" ... ##  $ Distribution of anthocyanin                               : chr [1:2170] \"Central part\" \"Totally pigmented\" \"Central part\" \"Totally pigmented\" ... ##  $ Leaf retention                                            : chr [1:2170] \"50-75% leaf retention\" \"25-50% leaf retention\" \"50-75% leaf retention\" \"25-50% leaf retention\" ... ##  $ Level of branching at the end of flowering                : chr [1:2170] \"2\" \"0\" \"1\" \"0\" ... ##  $ Colour of boiled tuberous root                            : chr [1:2170] \"Cream\" \"White\" \"Cream\" \"Cream\" ... ##  $ Number of levels of branching                             : num [1:2170] 4 0 0 0 0 0 3 1 0 0 ... ##  $ Angle of branching                                        : chr [1:2170] \"750-900\" \"No branching\" \"No branching\" \"No branching\" ... ##  $ Colours of unexpanded apical leaves at 9 months           : chr [1:2170] \"Dark green\" \"Dark green\" \"Dark green\" \"Light green\" ... ##  $ Leaf vein colour at 9 months                              : chr [1:2170] \"Dark green\" \"Green purple\" \"Green purple\" \"Green purple\" ... ##  $ Total number of plants remaining per accession at 9 months: num [1:2170] 2 5 5 4 5 4 3 2 1 3 ... ##  $ Petiole length at 9 months                                : chr [1:2170] \"Medium (15-20cm)\" \"Medium (15-20cm)\" \"Long (25-30cm)\" \"Medium (15-20cm)\" ... ##  $ Storage root peduncle                                     : chr [1:2170] \"Short\" NA \"Intermediate\" NA ... ##  $ Storage root constrictions                                : chr [1:2170] \"Absent\" NA \"Absent\" NA ... ##  $ Position of root                                          : chr [1:2170] \"Tending toward horizontal\" NA \"Tending toward horizontal\" NA ... ##  $ Number of storage root per plant                          : num [1:2170] 4 NA 12 2 10 8 5 6 9 9 ... ##  $ Total root number per plant                               : num [1:2170] 2 NA 3 2 2 ... ##  $ Total fresh weight of storage root per plant              : num [1:2170] 2 NA 5.8 NA 1.6 0.8 7.8 5.8 7 6.4 ... ##  $ Total root weight per plant                               : num [1:2170] 1 NA 1.45 NA 0.32 ... ##  $ Total fresh weight of storage shoot per plant             : num [1:2170] 4 4 4.2 0.4 0.4 0.2 7.2 5.4 10 10.2 ... ##  $ Total shoot weight per plant                              : num [1:2170] 2 4 1.05 0.4 0.08 ... ##  $ Total plant weight                                        : num [1:2170] 6 4 10 0.4 2 1 15 11.2 17 16.6 ... ##  $ Average plant weight                                      : num [1:2170] 3 4 2.5 0.4 0.4 ... ##  $ Amount of rotted storage root per plant                   : num [1:2170] 1 NA 2 2 8 7 0 1 0 0 ... ##  $ Storage root dry matter                                   : num [1:2170] 38.4 NA 28 NA 42.6 42.3 40 40 32 31.2 ... # Convert tibble to data.frame cassava_EC <- as.data.frame(cassava_EC) # Find NAs in each field na_status <- lapply(cassava_EC, function(x) table(is.na(x))) na_status <- dplyr::bind_rows(na_status,.id = \"Descriptor\")  DT::datatable(na_status,               options = list(scrollX = TRUE, paging=TRUE)) # Remove non informative fields cassava_EC$ID <- NULL cassava_EC$`Ploidy level` <- NULL cassava_EC$`Severity of CAD` <- NULL cassava_EC$Status <- NULL cassava_EC$`Height of the first apical branch` <- NULL  # Filter accessions with all the trait data present cassava_EC <- na.omit(cassava_EC)"},{"path":"https://aravind-j.github.io/EvaluateCore/articles/additional/Example_Core_Data.html","id":"prepare-the-descriptors","dir":"Articles > Additional","previous_headings":"","what":"Prepare the descriptors","title":"Example Datasets in `EvaluateCore`","text":"","code":"# Descriptors descriptors <- data.frame(Descriptors = colnames(cassava_EC)[-1]) descriptors$Abbr <- gsub(\"of|at|per plant|per accession\", \"\", descriptors$Descriptors) descriptors$Abbr <- gsub(\"\\\\s+\", \" \", descriptors$Abbr) descriptors$Abbr <- abbreviate(descriptors$Abbr) descriptors$Abbr <- gsub(\"\\\\(\", \"\", descriptors$Abbr) descriptors$Abbr <- toupper(descriptors$Abbr) descriptors$Type <- \"\"  descriptors[c(1:16),]$Type <- \"Qualitative\" descriptors[c(17:26),]$Type <- \"Quantitative\"  DT::datatable(descriptors,               options = list(scrollX = TRUE, paging=TRUE)) colnames(cassava_EC) <- c(\"Accession name\", descriptors$Abbr)  qual <- descriptors[descriptors$Type == \"Qualitative\", ]$Abbr quant <- descriptors[descriptors$Type == \"Quantitative\", ]$Abbr  # Convert qualitative traits to factor cassava_EC[, qual] <- data.frame(apply(cassava_EC[qual], 2, as.factor))"},{"path":"https://aravind-j.github.io/EvaluateCore/articles/additional/Example_Core_Data.html","id":"plot-qualitative-traits","dir":"Articles > Additional","previous_headings":"","what":"Plot qualitative traits","title":"Example Datasets in `EvaluateCore`","text":"","code":"qual_plots <- lapply(seq_along(cassava_EC[, qual]),        function(i) {          barplot(table(cassava_EC[, qual][, i]),                            xlab = names(cassava_EC[, qual])[i])          })"},{"path":"https://aravind-j.github.io/EvaluateCore/articles/additional/Example_Core_Data.html","id":"plot-quantitative-traits","dir":"Articles > Additional","previous_headings":"","what":"Plot quantitative traits","title":"Example Datasets in `EvaluateCore`","text":"","code":"quant_plots <- lapply(seq_along(cassava_EC[, quant]),        function(i) hist(table(cassava_EC[, quant][, i]),                         xlab = names(cassava_EC[, quant])[i],                         main = \"\"))"},{"path":"https://aravind-j.github.io/EvaluateCore/articles/additional/Example_Core_Data.html","id":"standardize-quantitative-data","dir":"Articles > Additional","previous_headings":"","what":"Standardize quantitative data","title":"Example Datasets in `EvaluateCore`","text":"","code":"# Standardize quantitative data as Z score cassava_EC_org <- cassava_EC cassava_EC[, quant] <- apply(cassava_EC[, quant], 2,                              function(x) scale(x, center = TRUE, scale = TRUE))  # Check standardization lapply(cassava_EC_org[, quant], function(x) sd(x)) ## $NMSR ## [1] 7.686827 ##  ## $TTRN ## [1] 1.910758 ##  ## $TFWSR ## [1] 4.532722 ##  ## $TTRW ## [1] 1.656973 ##  ## $TFWSS ## [1] 5.892645 ##  ## $TTSW ## [1] 2.00211 ##  ## $TTPW ## [1] 9.787778 ##  ## $AVPW ## [1] 3.363355 ##  ## $ARSR ## [1] 2.254339 ##  ## $SRDM ## [1] 5.032887 lapply(cassava_EC[, quant], function(x) sd(x)) ## $NMSR ## [1] 1 ##  ## $TTRN ## [1] 1 ##  ## $TFWSR ## [1] 1 ##  ## $TTRW ## [1] 1 ##  ## $TFWSS ## [1] 1 ##  ## $TTSW ## [1] 1 ##  ## $TTPW ## [1] 1 ##  ## $AVPW ## [1] 1 ##  ## $ARSR ## [1] 1 ##  ## $SRDM ## [1] 1 lapply(cassava_EC_org[, quant], function(x) round(mean(x))) ## $NMSR ## [1] 12 ##  ## $TTRN ## [1] 4 ##  ## $TFWSR ## [1] 5 ##  ## $TTRW ## [1] 2 ##  ## $TFWSS ## [1] 7 ##  ## $TTSW ## [1] 2 ##  ## $TTPW ## [1] 12 ##  ## $AVPW ## [1] 4 ##  ## $ARSR ## [1] 2 ##  ## $SRDM ## [1] 38 lapply(cassava_EC[, quant], function(x) round(mean(x))) ## $NMSR ## [1] 0 ##  ## $TTRN ## [1] 0 ##  ## $TFWSR ## [1] 0 ##  ## $TTRW ## [1] 0 ##  ## $TFWSS ## [1] 0 ##  ## $TTSW ## [1] 0 ##  ## $TTPW ## [1] 0 ##  ## $AVPW ## [1] 0 ##  ## $ARSR ## [1] 0 ##  ## $SRDM ## [1] 0"},{"path":"https://aravind-j.github.io/EvaluateCore/articles/additional/Example_Core_Data.html","id":"create-corehunter-phenotype-data","dir":"Articles > Additional","previous_headings":"","what":"Create CoreHunter phenotype data","title":"Example Datasets in `EvaluateCore`","text":"","code":"# Row names as accession names rownames(cassava_EC) <- cassava_EC$`Accession name` rownames(cassava_EC_org) <- cassava_EC_org$`Accession name`  # Convert data to corehunter phenotypes format # RD - for quantitative; NS - for qualitative pheno <- phenotypes(data = cassava_EC[, -1],                     types = ifelse(descriptors$Type == \"Qualitative\",                                    \"NS\", \"RD\"))  pheno ## # Phenotypes ##  ## Number of accessions = 1684 ## Ids: chr [1:1684] \"TMe-1915\" \"TMe-2\" \"TMe-4\" \"TMe-6\" \"TMe-11\" \"TMe-12\" \"TMe-13\" ... ##  ## Number of traits = 26 ## Traits: \"CUAL\" \"LNGS\" \"PTLC\" \"DSTA\" \"LFRT\" \"LBTEF\" \"CBTR\" \"NMLB\" \"ANGB\" \"CUAL9M\" \"LVC9M\" \"TNPR9M\" \"PL9M\" \"STRP\" \"STRC\" \"PSTR\" \"NMSR\" \"TTRN\" \"TFWSR\" \"TTRW\" \"TFWSS\" \"TTSW\" \"TTPW\" \"AVPW\" \"ARSR\" \"SRDM\" ## Quantitative traits: \"NMSR\" \"TTRN\" \"TFWSR\" \"TTRW\" \"TFWSS\" \"TTSW\" \"TTPW\" \"AVPW\" \"ARSR\" \"SRDM\" ## Qualitative traits: \"CUAL\" \"LNGS\" \"PTLC\" \"DSTA\" \"LFRT\" \"LBTEF\" \"CBTR\" \"NMLB\" \"ANGB\" \"CUAL9M\" \"LVC9M\" \"TNPR9M\" \"PL9M\" \"STRP\" \"STRC\" \"PSTR\""},{"path":"https://aravind-j.github.io/EvaluateCore/articles/additional/Example_Core_Data.html","id":"setup-corehunter-parameters","dir":"Articles > Additional","previous_headings":"","what":"Setup CoreHunter parameters","title":"Example Datasets in `EvaluateCore`","text":"","code":"# Set seed for reproducible results set.seed(123)  # Desired size csize <- 0.1 # 10%  # Max search steps without improvement impr_steps <- 100  # CoreHunter objectives # Equal weightage for Average entry-to-nearest-entry distance (EN) and  # Average accession-to-nearest-entry distance (AN) obj <- list(   objective(type = c(\"EN\"), measure = c(\"GD\")),   objective(type = c(\"AN\"), measure = c(\"GD\")))  obj ## [[1]] ## Core Hunter objective: EN (measure = GD, weight = 1.00, range = N/A) ## [[2]] ## Core Hunter objective: AN (measure = GD, weight = 1.00, range = N/A)"},{"path":"https://aravind-j.github.io/EvaluateCore/articles/additional/Example_Core_Data.html","id":"generate-the-core","dir":"Articles > Additional","previous_headings":"","what":"Generate the core","title":"Example Datasets in `EvaluateCore`","text":"","code":"core <- sampleCore(data = pheno, obj = obj, size = csize,                    impr.steps = impr_steps, verbose = TRUE) ## Normalizing objectives. ## Average entry to nearest entry (Gower): [0.167, 0.293] ## Average accession to nearest entry (Gower): [0.140, 0.188] ## Finished normalization. ## Search : ParallelTempering started ## Current value: -0.368442 ## Current value: -0.358982 ## Current value: -0.330855 ## Current value: -0.294309 ## Current value: -0.294106 ## Current value: -0.276086 ## Current value: -0.271618 ## Current value: -0.260871 ## Current value: -0.257898 ## Current value: -0.250268 ## . ## . ## . ## . ## . ## . ## . ## . ## . ## . ## Current value: 0.437049 ## Current value: 0.437233 ## Current value: 0.437836 ## Current value: 0.438005 ## Current value: 0.439092 ## Current value: 0.440315 ## Current value: 0.440388 ## Current value: 0.441378 ## Current value: 0.441550 ## Search : ParallelTempering stopped after 908.0 seconds and 1493 steps ## Best solution with evaluation : 0.441550 ## Best solution with evaluation : Subset solution: {44, 417, 585, 609, 990, 1064, 1085, 1155, 1347, 1353, 1362, 1408, 1422, 1462, 1515, 1616, 1640, 1670, 1530, 1517, 772, 204, 1481, 571, 533, 833, 1138, 826, 9, 75, 481, 605, 1203, 568, 1411, 579, 781, 428, 588, 1133, 1524, 1073, 842, 379, 1536, 1676, 710, 1378, 272, 87, 1156, 25, 767, 1661, 756, 822, 1201, 893, 1382, 1369, 1578, 1163, 1134, 1611, 1618, 1667, 476, 1019, 1421, 678, 1602, 802, 467, 559, 1641, 1087, 228, 1541, 508, 1500, 1014, 1233, 1529, 793, 932, 619, 942, 1673, 1683, 1537, 1380, 829, 1146, 1649, 168, 1383, 242, 1399, 864, 434, 224, 1273, 1680, 582, 1470, 1333, 1566, 1127, 1015, 690, 1128, 927, 1672, 1581, 213, 718, 31, 1337, 1227, 661, 1151, 171, 606, 563, 347, 186, 925, 763, 465, 969, 124, 1437, 1594, 459, 305, 817, 818, 681, 876, 1270, 551, 93, 263, 1453, 246, 1331, 1181, 873, 1302, 1290, 1596, 697, 1164, 1660, 130, 1538, 1044, 635, 386, 192, 1469, 600, 1017, 894, 682, 594, 453, 1174} ## $sel ##   [1] \"TMe-38\"   \"TMe-41\"   \"TMe-66\"   \"TMe-72\"   \"TMe-123\"  \"TMe-150\"  ##   [7] \"TMe-180\"  \"TMe-181\"  \"TMe-206\"  \"TMe-241\"  \"TMe-247\"  \"TMe-264\"  ##  [13] \"TMe-287\"  \"TMe-353\"  \"TMe-378\"  \"TMe-386\"  \"TMe-436\"  \"TMe-447\"  ##  [19] \"TMe-486\"  \"TMe-540\"  \"TMe-550\"  \"TMe-589\"  \"TMe-603\"  \"TMe-634\"  ##  [25] \"TMe-667\"  \"TMe-696\"  \"TMe-698\"  \"TMe-700\"  \"TMe-706\"  \"TMe-725\"  ##  [31] \"TMe-764\"  \"TMe-766\"  \"TMe-778\"  \"TMe-815\"  \"TMe-828\"  \"TMe-835\"  ##  [37] \"TMe-858\"  \"TMe-886\"  \"TMe-888\"  \"TMe-919\"  \"TMe-945\"  \"TMe-1086\" ##  [43] \"TMe-1091\" \"TMe-1117\" \"TMe-1124\" \"TMe-1137\" \"TMe-1139\" \"TMe-1174\" ##  [49] \"TMe-1188\" \"TMe-1211\" \"TMe-1216\" \"TMe-1232\" \"TMe-1234\" \"TMe-1271\" ##  [55] \"TMe-1290\" \"TMe-1297\" \"TMe-1336\" \"TMe-1377\" \"TMe-1390\" \"TMe-1404\" ##  [61] \"TMe-1484\" \"TMe-1512\" \"TMe-1526\" \"TMe-1541\" \"TMe-1564\" \"TMe-1730\" ##  [67] \"TMe-1733\" \"TMe-1744\" \"TMe-1775\" \"TMe-1795\" \"TMe-1804\" \"TMe-1823\" ##  [73] \"TMe-1836\" \"TMe-1901\" \"TMe-1960\" \"TMe-2003\" \"TMe-2010\" \"TMe-2027\" ##  [79] \"TMe-2033\" \"TMe-2043\" \"TMe-2050\" \"TMe-2064\" \"TMe-2069\" \"TMe-2084\" ##  [85] \"TMe-2103\" \"TMe-2128\" \"TMe-2158\" \"TMe-2172\" \"TMe-2191\" \"TMe-2196\" ##  [91] \"TMe-2240\" \"TMe-2326\" \"TMe-2372\" \"TMe-2543\" \"TMe-2551\" \"TMe-2568\" ##  [97] \"TMe-2643\" \"TMe-2775\" \"TMe-2785\" \"TMe-2791\" \"TMe-2797\" \"TMe-2820\" ## [103] \"TMe-2853\" \"TMe-2904\" \"TMe-2913\" \"TMe-2934\" \"TMe-2935\" \"TMe-2940\" ## [109] \"TMe-2952\" \"TMe-2967\" \"TMe-2975\" \"TMe-2980\" \"TMe-2984\" \"TMe-2989\" ## [115] \"TMe-2993\" \"TMe-3044\" \"TMe-3076\" \"TMe-3109\" \"TMe-3110\" \"TMe-3115\" ## [121] \"TMe-3141\" \"TMe-3151\" \"TMe-3163\" \"TMe-3164\" \"TMe-3185\" \"TMe-3210\" ## [127] \"TMe-3233\" \"TMe-3252\" \"TMe-3262\" \"TMe-3276\" \"TMe-3292\" \"TMe-3296\" ## [133] \"TMe-3302\" \"TMe-3324\" \"TMe-3329\" \"TMe-3378\" \"TMe-3396\" \"TMe-3411\" ## [139] \"TMe-3415\" \"TMe-3424\" \"TMe-3434\" \"TMe-3437\" \"TMe-3452\" \"TMe-3454\" ## [145] \"TMe-3455\" \"TMe-3457\" \"TMe-3460\" \"TMe-3466\" \"TMe-3475\" \"TMe-3481\" ## [151] \"TMe-3493\" \"TMe-3545\" \"TMe-3548\" \"TMe-3549\" \"TMe-3573\" \"TMe-3577\" ## [157] \"TMe-3581\" \"TMe-3591\" \"TMe-3601\" \"TMe-3605\" \"TMe-3628\" \"TMe-3638\" ## [163] \"TMe-3667\" \"TMe-3690\" \"TMe-3721\" \"TMe-3730\" \"TMe-3731\" \"TMe-3736\" ##  ## $EN ## $EN$GD ## [1] 0.2592901 ##  ##  ## $AN ## $AN$GD ## [1] 0.1537492 ##  ##  ## attr(,\"class\") ## [1] \"chcore\" \"list\""},{"path":"https://aravind-j.github.io/EvaluateCore/articles/additional/Example_Core_Data.html","id":"export-the-datasets","dir":"Articles > Additional","previous_headings":"","what":"Export the datasets","title":"Example Datasets in `EvaluateCore`","text":"","code":"cassava_CC <- cassava_EC_org[rownames(cassava_EC) %in% core$sel, ]  write.csv(cassava_EC_org, \"cassava_EC.csv\", row.names = TRUE) write.csv(cassava_CC, \"cassava_CC.csv\", row.names = TRUE)"},{"path":"https://aravind-j.github.io/EvaluateCore/articles/additional/Example_Core_Data.html","id":"session-info","dir":"Articles > Additional","previous_headings":"","what":"Session Info","title":"Example Datasets in `EvaluateCore`","text":"","code":"sessionInfo() ## R version 4.4.3 (2025-02-28) ## Platform: aarch64-apple-darwin20 ## Running under: macOS Sonoma 14.7.4 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib  ## LAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0 ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## time zone: UTC ## tzcode source: internal ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] corehunter_3.2.3 rJava_1.0-11     readxl_1.4.5     ##  ## loaded via a namespace (and not attached): ##  [1] vctrs_0.6.5        cli_3.6.4          knitr_1.49         rlang_1.1.5        ##  [5] xfun_0.51          generics_0.1.3     textshaping_1.0.0  jsonlite_1.9.1     ##  [9] glue_1.8.0         DT_0.33            htmltools_0.5.8.1  ragg_1.3.3         ## [13] sass_0.4.9         rmarkdown_2.29     cellranger_1.1.0   crosstalk_1.2.1    ## [17] tibble_3.2.1       evaluate_1.0.3     jquerylib_0.1.4    fastmap_1.2.0      ## [21] yaml_2.3.10        lifecycle_1.0.4    naturalsort_0.1.3  compiler_4.4.3     ## [25] dplyr_1.1.4        fs_1.6.5           pkgconfig_2.0.3    htmlwidgets_1.6.4  ## [29] systemfonts_1.2.1  digest_0.6.37      R6_2.6.1           tidyselect_1.2.1   ## [33] pillar_1.10.1      magrittr_2.0.3     bslib_0.9.0        tools_4.4.3        ## [37] pkgdown_2.1.1.9000 cachem_1.1.0       desc_1.4.3"},{"path":[]},{"path":"https://aravind-j.github.io/EvaluateCore/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"J. Aravind. Author, maintainer. Vikender Kaur. Author. Dhammaprakash Pandhari Wankhede. Author. Joghee Nanjundan. Author. ICAR-NBGPR. Copyright holder.           www.nbpgr.ernet.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Aravind, J., Kaur, V., Wankhede, D. P. Nanjundan, J. (2025).  EvaluateCore: Quality Evaluation Core Collections. R package version 0.1.3.9000, https://aravind-j.github.io/EvaluateCore/https://CRAN.R-project.org/package=EvaluateCore.","code":"@Manual{,   title = {EvaluateCore: Quality Evaluation of Core Collections},   author = {J. Aravind and Vikender Kaur and Dhammaprakash Pandhari Wankhede and J. Nanjundan},   year = {2025},   note = {R package version 0.1.3.9000 https://aravind-j.github.io/EvaluateCore/ https://CRAN.R-project.org/package=EvaluateCore}, }"},{"path":[]},{"path":[]},{"path":"https://aravind-j.github.io/EvaluateCore/index.html","id":"aravind-j1-kaur-v2-wankhede-d-p3-and-nanjundan-j4","dir":"","previous_headings":"EvaluateCore: Quality Evaluation of Core Collections","what":"Aravind, J.1, Kaur, V.2, Wankhede, D. P.3 and Nanjundan, J.4","title":"Quality Evaluation of Core Collections","text":"Division Germplasm Conservation, ICAR-National Bureau Plant Genetic Resources, New Delhi. Division Germplasm Evaluation, ICAR-National Bureau Plant Genetic Resources, New Delhi. Division Genomic Resources, ICAR-National Bureau Plant Genetic Resources, New Delhi. ICAR-Indian Agricultural Research Institute, Regional Station, Wellington, Tamil Nadu.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Quality Evaluation of Core Collections","text":"Implements various quality evaluation statistics assess value plant germplasm core collections using qualitative quantitative phenotypic trait data according Odong et al. (2015) doi:10.1007/s00122-012-1971-y.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Quality Evaluation of Core Collections","text":"package can installed CRAN follows: development version can installed github follows:","code":"# Install from CRAN install.packages('EvaluateCore', dependencies=TRUE) # Install development version from Github devtools::install_github(\"aravind-j/EvaluateCore\")"},{"path":"https://aravind-j.github.io/EvaluateCore/index.html","id":"whats-new","dir":"","previous_headings":"","what":"What’s new","title":"Quality Evaluation of Core Collections","text":"know whats new version type:","code":"news(package='EvaluateCore')"},{"path":"https://aravind-j.github.io/EvaluateCore/index.html","id":"links","dir":"","previous_headings":"","what":"Links","title":"Quality Evaluation of Core Collections","text":"CRAN page Github page Documentation website Zenodo DOI","code":""},{"path":[]},{"path":"https://aravind-j.github.io/EvaluateCore/index.html","id":"citing-evaluatecore","dir":"","previous_headings":"","what":"Citing EvaluateCore","title":"Quality Evaluation of Core Collections","text":"cite methods package use:","code":"citation(\"EvaluateCore\") To cite the R package 'EvaluateCore' in publications use:    Aravind, J., Kaur, V., Wankhede, D. P. and Nanjundan, J. (2025).   EvaluateCore: Quality Evaluation of Core Collections. R package   version 0.1.3.9000,   https://aravind-j.github.io/EvaluateCore/https://CRAN.R-project.org/package=EvaluateCore.  A BibTeX entry for LaTeX users is    @Manual{,     title = {EvaluateCore: Quality Evaluation of Core Collections},     author = {J. Aravind and Vikender Kaur and Dhammaprakash Pandhari Wankhede and J. Nanjundan},     year = {2025},     note = {R package version 0.1.3.9000 https://aravind-j.github.io/EvaluateCore/ https://CRAN.R-project.org/package=EvaluateCore},   }  This free and open-source software implements academic research by the authors and co-workers. If you use it, please support the project by citing the package."},{"path":"https://aravind-j.github.io/EvaluateCore/reference/EvaluateCore-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions in package EvaluateCore. — EvaluateCore-deprecated","title":"Deprecated functions in package EvaluateCore. — EvaluateCore-deprecated","text":"functions listed deprecated defunct   near future. possible, alternative functions similar   functionality also mentioned. Help pages deprecated functions   available help(\"<function>-deprecated\").","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/EvaluateCore-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions in package EvaluateCore. — EvaluateCore-deprecated","text":"","code":"shannon.evaluate.core(data, names, qualitative, selected)"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/EvaluateCore-deprecated.html","id":"shannon-evaluate-core","dir":"Reference","previous_headings":"","what":"shannon.evaluate.core","title":"Deprecated functions in package EvaluateCore. — EvaluateCore-deprecated","text":"shannon.evaluate.core, use diversity.evaluate.core.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/bar.evaluate.core.html","id":null,"dir":"Reference","previous_headings":"","what":"Bar Plots — bar.evaluate.core","title":"Bar Plots — bar.evaluate.core","text":"Plot Bar plots graphically compare frequency distributions qualitative traits entire collection (EC) core set (CS).","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/bar.evaluate.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bar Plots — bar.evaluate.core","text":"","code":"bar.evaluate.core(data, names, qualitative, selected)"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/bar.evaluate.core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bar Plots — bar.evaluate.core","text":"data data data frame object. data frame possess one row per individual columns individual names multiple trait/character data. names Name column individual names character string. qualitative Name columns qualitative traits character vector. selected Character vector names individuals selected core collection present names column.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/bar.evaluate.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bar Plots — bar.evaluate.core","text":"list ggplot objects relative frequency bar plots   CS EC trait specified qualitative.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/EvaluateCore/reference/bar.evaluate.core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bar Plots — bar.evaluate.core","text":"","code":"data(\"cassava_CC\") data(\"cassava_EC\")  ec <- cbind(genotypes = rownames(cassava_EC), cassava_EC) ec$genotypes <- as.character(ec$genotypes) rownames(ec) <- NULL  core <- rownames(cassava_CC)  quant <- c(\"NMSR\", \"TTRN\", \"TFWSR\", \"TTRW\", \"TFWSS\", \"TTSW\", \"TTPW\", \"AVPW\",            \"ARSR\", \"SRDM\") qual <- c(\"CUAL\", \"LNGS\", \"PTLC\", \"DSTA\", \"LFRT\", \"LBTEF\", \"CBTR\", \"NMLB\",           \"ANGB\", \"CUAL9M\", \"LVC9M\", \"TNPR9M\", \"PL9M\", \"STRP\", \"STRC\",           \"PSTR\")  ec[, qual] <- lapply(ec[, qual],                      function(x) factor(as.factor(x)))  bar.evaluate.core(data = ec, names = \"genotypes\",                   qualitative = qual, selected = core) #> $CUAL #> Warning: The dot-dot notation (`..prop..`) was deprecated in ggplot2 3.4.0. #> ℹ Please use `after_stat(prop)` instead. #> ℹ The deprecated feature was likely used in the EvaluateCore package. #>   Please report the issue at #>   <https://github.com/aravind-j/EvaluateCore/issues>.  #>  #> $LNGS  #>  #> $PTLC  #>  #> $DSTA  #>  #> $LFRT  #>  #> $LBTEF  #>  #> $CBTR  #>  #> $NMLB  #>  #> $ANGB  #>  #> $CUAL9M  #>  #> $LVC9M  #>  #> $TNPR9M  #>  #> $PL9M  #>  #> $STRP  #>  #> $STRC  #>  #> $PSTR  #>"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/box.evaluate.core.html","id":null,"dir":"Reference","previous_headings":"","what":"Box Plots — box.evaluate.core","title":"Box Plots — box.evaluate.core","text":"Plot Box--Whisker plots (Tukey 1970; McGill et al. 1978)  graphically compare probability distributions quantitative traits entire collection (EC) core set (CS).","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/box.evaluate.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Box Plots — box.evaluate.core","text":"","code":"box.evaluate.core(data, names, quantitative, selected)"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/box.evaluate.core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Box Plots — box.evaluate.core","text":"data data data frame object. data frame possess one row per individual columns individual names multiple trait/character data. names Name column individual names character string. quantitative Name columns quantitative traits character vector. selected Character vector names individuals selected core collection present names column.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/box.evaluate.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Box Plots — box.evaluate.core","text":"list ggplot objects box plots CS EC   trait specified quantitative.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/box.evaluate.core.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Box Plots — box.evaluate.core","text":"McGill R, Tukey JW, Larsen WA (1978). “Variations box plots.” American Statistician, 32(1), 12. Tukey JW (1970). Exploratory Data Analysis. Preliminary edition. Addison-Wesley.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/EvaluateCore/reference/box.evaluate.core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Box Plots — box.evaluate.core","text":"","code":"data(\"cassava_CC\") data(\"cassava_EC\")  ec <- cbind(genotypes = rownames(cassava_EC), cassava_EC) ec$genotypes <- as.character(ec$genotypes) rownames(ec) <- NULL  core <- rownames(cassava_CC)  quant <- c(\"NMSR\", \"TTRN\", \"TFWSR\", \"TTRW\", \"TFWSS\", \"TTSW\", \"TTPW\", \"AVPW\",            \"ARSR\", \"SRDM\") qual <- c(\"CUAL\", \"LNGS\", \"PTLC\", \"DSTA\", \"LFRT\", \"LBTEF\", \"CBTR\", \"NMLB\",           \"ANGB\", \"CUAL9M\", \"LVC9M\", \"TNPR9M\", \"PL9M\", \"STRP\", \"STRC\",           \"PSTR\")  ec[, qual] <- lapply(ec[, qual],                      function(x) factor(as.factor(x)))  box.evaluate.core(data = ec, names = \"genotypes\",                   quantitative = quant, selected = core) #> $NMSR  #>  #> $TTRN  #>  #> $TFWSR  #>  #> $TTRW  #>  #> $TFWSS  #>  #> $TTSW  #>  #> $TTPW  #>  #> $AVPW  #>  #> $ARSR  #>  #> $SRDM  #>"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/cassava_CC.html","id":null,"dir":"Reference","previous_headings":"","what":"IITA Cassava Germplasm Data - Core Collection — cassava_CC","title":"IITA Cassava Germplasm Data - Core Collection — cassava_CC","text":"example germplasm characterisation data core collection generated 1591 accessions IITA Cassava collection (International Institute Tropical Agriculture et al. 2019)  using 10 quantitative 48 qualitative trait data CoreHunter3 (corehunter). core set generated using distance based measures giving equal weightage Average entry--nearest-entry distance (EN) Average accession--nearest-entry distance (). Includes data 26 descriptors 168 (10 % cassava_EC) accessions. used demonstrate various functions EvaluateCore package.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/cassava_CC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IITA Cassava Germplasm Data - Core Collection — cassava_CC","text":"","code":"cassava_CC"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/cassava_CC.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IITA Cassava Germplasm Data - Core Collection — cassava_CC","text":"data frame 58 columns: CUAL Colour   unexpanded apical leaves LNGS Length stipules PTLC Petiole colour DSTA Distribution anthocyanin LFRT Leaf retention LBTEF Level branching end   flowering CBTR Colour boiled tuberous root NMLB Number   levels branching ANGB Angle branching CUAL9M Colours unexpanded apical leaves 9 months LVC9M Leaf vein colour 9 months TNPR9M Total number   plants remaining per accession 9 months PL9M Petiole length 9   months STRP Storage root peduncle STRC Storage root   constrictions PSTR Position root NMSR Number storage   root per plant TTRN Total root number per plant TFWSR Total   fresh weight storage root per plant TTRW Total root weight per   plant TFWSS Total fresh weight storage shoot per plant TTSW Total shoot weight per plant TTPW Total plant weight AVPW Average plant weight ARSR Amount rotted storage root   per plant SRDM Storage root dry matter","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/cassava_CC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"IITA Cassava Germplasm Data - Core Collection — cassava_CC","text":"details example dataset built original data available online.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/cassava_CC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"IITA Cassava Germplasm Data - Core Collection — cassava_CC","text":"International Institute Tropical Agriculture, Benjamin F, Marimagne T (2019). “Cassava morphological characterization. Version 2018.1.”","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/cassava_CC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"IITA Cassava Germplasm Data - Core Collection — cassava_CC","text":"","code":"data(cassava_CC) summary(cassava_CC) #>      CUAL               LNGS               PTLC               DSTA           #>  Length:168         Length:168         Length:168         Length:168         #>  Class :character   Class :character   Class :character   Class :character   #>  Mode  :character   Mode  :character   Mode  :character   Mode  :character   #>                                                                              #>                                                                              #>                                                                              #>      LFRT              LBTEF               CBTR               NMLB           #>  Length:168         Length:168         Length:168         Length:168         #>  Class :character   Class :character   Class :character   Class :character   #>  Mode  :character   Mode  :character   Mode  :character   Mode  :character   #>                                                                              #>                                                                              #>                                                                              #>      ANGB              CUAL9M             LVC9M              TNPR9M          #>  Length:168         Length:168         Length:168         Length:168         #>  Class :character   Class :character   Class :character   Class :character   #>  Mode  :character   Mode  :character   Mode  :character   Mode  :character   #>                                                                              #>                                                                              #>                                                                              #>      PL9M               STRP               STRC               PSTR           #>  Length:168         Length:168         Length:168         Length:168         #>  Class :character   Class :character   Class :character   Class :character   #>  Mode  :character   Mode  :character   Mode  :character   Mode  :character   #>                                                                              #>                                                                              #>                                                                              #>       NMSR            TTRN            TFWSR             TTRW         #>  Min.   : 1.00   Min.   : 0.250   Min.   : 0.200   Min.   : 0.1000   #>  1st Qu.: 5.00   1st Qu.: 2.333   1st Qu.: 2.400   1st Qu.: 0.9333   #>  Median : 9.00   Median : 3.500   Median : 4.300   Median : 1.5800   #>  Mean   :10.89   Mean   : 3.931   Mean   : 6.348   Mean   : 2.6178   #>  3rd Qu.:14.25   3rd Qu.: 5.000   3rd Qu.: 7.950   3rd Qu.: 3.2000   #>  Max.   :55.00   Max.   :13.750   Max.   :38.000   Max.   :20.2000   #>      TFWSS             TTSW             TTPW            AVPW        #>  Min.   : 0.200   Min.   : 0.100   Min.   : 0.40   Min.   : 0.200   #>  1st Qu.: 2.700   1st Qu.: 1.113   1st Qu.: 5.35   1st Qu.: 2.190   #>  Median : 5.400   Median : 2.058   Median :10.40   Median : 3.600   #>  Mean   : 7.748   Mean   : 3.069   Mean   :14.10   Mean   : 5.687   #>  3rd Qu.:11.000   3rd Qu.: 3.950   3rd Qu.:19.00   3rd Qu.: 7.300   #>  Max.   :42.000   Max.   :22.000   Max.   :80.00   Max.   :33.000   #>       ARSR            SRDM       #>  Min.   :0.000   Min.   :21.90   #>  1st Qu.:0.000   1st Qu.:35.60   #>  Median :1.000   Median :38.15   #>  Mean   :1.702   Mean   :37.73   #>  3rd Qu.:3.000   3rd Qu.:40.23   #>  Max.   :8.000   Max.   :48.10    quant <- c(\"NMSR\", \"TTRN\", \"TFWSR\", \"TTRW\", \"TFWSS\", \"TTSW\", \"TTPW\", \"AVPW\",            \"ARSR\", \"SRDM\") qual <- c(\"CUAL\", \"LNGS\", \"PTLC\", \"DSTA\", \"LFRT\", \"LBTEF\", \"CBTR\", \"NMLB\",           \"ANGB\", \"CUAL9M\", \"LVC9M\", \"TNPR9M\", \"PL9M\", \"STRP\", \"STRC\",           \"PSTR\")  lapply(seq_along(cassava_CC[, qual]),        function(i) barplot(table(cassava_CC[, qual][, i]),                            xlab = names(cassava_CC[, qual])[i]))                 #> [[1]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #> [3,]  3.1 #> [4,]  4.3 #>  #> [[2]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #> [3,]  3.1 #>  #> [[3]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #> [3,]  3.1 #> [4,]  4.3 #> [5,]  5.5 #>  #> [[4]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #> [3,]  3.1 #> [4,]  4.3 #> [5,]  5.5 #>  #> [[5]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #> [3,]  3.1 #> [4,]  4.3 #>  #> [[6]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #> [3,]  3.1 #> [4,]  4.3 #> [5,]  5.5 #> [6,]  6.7 #>  #> [[7]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #> [3,]  3.1 #>  #> [[8]] #>       [,1] #>  [1,]  0.7 #>  [2,]  1.9 #>  [3,]  3.1 #>  [4,]  4.3 #>  [5,]  5.5 #>  [6,]  6.7 #>  [7,]  7.9 #>  [8,]  9.1 #>  [9,] 10.3 #>  #> [[9]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #> [3,]  3.1 #> [4,]  4.3 #>  #> [[10]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #> [3,]  3.1 #> [4,]  4.3 #> [5,]  5.5 #>  #> [[11]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #> [3,]  3.1 #> [4,]  4.3 #> [5,]  5.5 #>  #> [[12]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #> [3,]  3.1 #> [4,]  4.3 #> [5,]  5.5 #>  #> [[13]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #>  #> [[14]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #> [3,]  3.1 #> [4,]  4.3 #>  #> [[15]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #>  #> [[16]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #>   lapply(seq_along(cassava_CC[, quant]),        function(i) hist(table(cassava_CC[, quant][, i]),                         xlab = names(cassava_CC[, quant])[i],                         main = \"\"))           #> [[1]] #> $breaks #> [1]  0  2  4  6  8 10 12 #>  #> $counts #> [1] 9 4 5 4 4 4 #>  #> $density #> [1] 0.15000000 0.06666667 0.08333333 0.06666667 0.06666667 0.06666667 #>  #> $mids #> [1]  1  3  5  7  9 11 #>  #> $xname #> [1] \"table(cassava_CC[, quant][, i])\" #>  #> $equidist #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"histogram\" #>  #> [[2]] #> $breaks #>  [1]  0  2  4  6  8 10 12 14 16 18 20 #>  #> $counts #>  [1] 32  9  4  1  2  1  0  0  0  2 #>  #> $density #>  [1] 0.313725490 0.088235294 0.039215686 0.009803922 0.019607843 0.009803922 #>  [7] 0.000000000 0.000000000 0.000000000 0.019607843 #>  #> $mids #>  [1]  1  3  5  7  9 11 13 15 17 19 #>  #> $xname #> [1] \"table(cassava_CC[, quant][, i])\" #>  #> $equidist #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"histogram\" #>  #> [[3]] #> $breaks #> [1] 1 2 3 4 5 6 7 8 #>  #> $counts #> [1] 42 11  7  3  3  2  1 #>  #> $density #> [1] 0.60869565 0.15942029 0.10144928 0.04347826 0.04347826 0.02898551 0.01449275 #>  #> $mids #> [1] 1.5 2.5 3.5 4.5 5.5 6.5 7.5 #>  #> $xname #> [1] \"table(cassava_CC[, quant][, i])\" #>  #> $equidist #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"histogram\" #>  #> [[4]] #> $breaks #>  [1]  1  2  3  4  5  6  7  8  9 10 11 #>  #> $counts #>  [1] 82  6  3  0  1  1  1  0  0  1 #>  #> $density #>  [1] 0.86315789 0.06315789 0.03157895 0.00000000 0.01052632 0.01052632 #>  [7] 0.01052632 0.00000000 0.00000000 0.01052632 #>  #> $mids #>  [1]  1.5  2.5  3.5  4.5  5.5  6.5  7.5  8.5  9.5 10.5 #>  #> $xname #> [1] \"table(cassava_CC[, quant][, i])\" #>  #> $equidist #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"histogram\" #>  #> [[5]] #> $breaks #>  [1] 1.0 1.5 2.0 2.5 3.0 3.5 4.0 4.5 5.0 5.5 6.0 #>  #> $counts #>  [1] 37 14  0 11  0  6  0  8  0  1 #>  #> $density #>  [1] 0.96103896 0.36363636 0.00000000 0.28571429 0.00000000 0.15584416 #>  [7] 0.00000000 0.20779221 0.00000000 0.02597403 #>  #> $mids #>  [1] 1.25 1.75 2.25 2.75 3.25 3.75 4.25 4.75 5.25 5.75 #>  #> $xname #> [1] \"table(cassava_CC[, quant][, i])\" #>  #> $equidist #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"histogram\" #>  #> [[6]] #> $breaks #>  [1] 1.0 1.5 2.0 2.5 3.0 3.5 4.0 4.5 5.0 5.5 6.0 #>  #> $counts #>  [1] 64 16  0 10  0  2  0  2  0  4 #>  #> $density #>  [1] 1.30612245 0.32653061 0.00000000 0.20408163 0.00000000 0.04081633 #>  [7] 0.00000000 0.04081633 0.00000000 0.08163265 #>  #> $mids #>  [1] 1.25 1.75 2.25 2.75 3.25 3.75 4.25 4.75 5.25 5.75 #>  #> $xname #> [1] \"table(cassava_CC[, quant][, i])\" #>  #> $equidist #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"histogram\" #>  #> [[7]] #> $breaks #> [1] 1.0 1.5 2.0 2.5 3.0 3.5 4.0 4.5 5.0 #>  #> $counts #> [1] 68 18  0 13  0  5  0  1 #>  #> $density #> [1] 1.29523810 0.34285714 0.00000000 0.24761905 0.00000000 0.09523810 0.00000000 #> [8] 0.01904762 #>  #> $mids #> [1] 1.25 1.75 2.25 2.75 3.25 3.75 4.25 4.75 #>  #> $xname #> [1] \"table(cassava_CC[, quant][, i])\" #>  #> $equidist #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"histogram\" #>  #> [[8]] #> $breaks #> [1] 1.0 1.5 2.0 2.5 3.0 3.5 4.0 4.5 5.0 #>  #> $counts #> [1] 90 24  0  7  0  1  0  1 #>  #> $density #> [1] 1.46341463 0.39024390 0.00000000 0.11382114 0.00000000 0.01626016 0.00000000 #> [8] 0.01626016 #>  #> $mids #> [1] 1.25 1.75 2.25 2.75 3.25 3.75 4.25 4.75 #>  #> $xname #> [1] \"table(cassava_CC[, quant][, i])\" #>  #> $equidist #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"histogram\" #>  #> [[9]] #> $breaks #> [1]  0 10 20 30 40 50 60 70 #>  #> $counts #> [1] 5 0 3 0 0 0 1 #>  #> $density #> [1] 0.05555556 0.00000000 0.03333333 0.00000000 0.00000000 0.00000000 0.01111111 #>  #> $mids #> [1]  5 15 25 35 45 55 65 #>  #> $xname #> [1] \"table(cassava_CC[, quant][, i])\" #>  #> $equidist #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"histogram\" #>  #> [[10]] #> $breaks #>  [1] 1.0 1.5 2.0 2.5 3.0 3.5 4.0 4.5 5.0 5.5 6.0 #>  #> $counts #>  [1] 59 25  0 11  0  5  0  0  0  1 #>  #> $density #>  [1] 1.16831683 0.49504950 0.00000000 0.21782178 0.00000000 0.09900990 #>  [7] 0.00000000 0.00000000 0.00000000 0.01980198 #>  #> $mids #>  [1] 1.25 1.75 2.25 2.75 3.25 3.75 4.25 4.75 5.25 5.75 #>  #> $xname #> [1] \"table(cassava_CC[, quant][, i])\" #>  #> $equidist #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"histogram\" #>"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/cassava_EC.html","id":null,"dir":"Reference","previous_headings":"","what":"IITA Cassava Germplasm Data - Entire Collection — cassava_EC","title":"IITA Cassava Germplasm Data - Entire Collection — cassava_EC","text":"example germplasm characterisation data subset IITA Cassava collection (International Institute Tropical Agriculture et al. 2019) . Includes data 26 (62) descriptors 1684 (2170) accessions. used demonstrate various functions EvaluateCore package.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/cassava_EC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IITA Cassava Germplasm Data - Entire Collection — cassava_EC","text":"","code":"cassava_EC"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/cassava_EC.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IITA Cassava Germplasm Data - Entire Collection — cassava_EC","text":"data frame 58 columns: CUAL Colour   unexpanded apical leaves LNGS Length stipules PTLC Petiole colour DSTA Distribution anthocyanin LFRT Leaf retention LBTEF Level branching end   flowering CBTR Colour boiled tuberous root NMLB Number   levels branching ANGB Angle branching CUAL9M Colours unexpanded apical leaves 9 months LVC9M Leaf vein colour 9 months TNPR9M Total number   plants remaining per accession 9 months PL9M Petiole length 9   months STRP Storage root peduncle STRC Storage root   constrictions PSTR Position root NMSR Number storage   root per plant TTRN Total root number per plant TFWSR Total   fresh weight storage root per plant TTRW Total root weight per   plant TFWSS Total fresh weight storage shoot per plant TTSW Total shoot weight per plant TTPW Total plant weight AVPW Average plant weight ARSR Amount rotted storage root   per plant SRDM Storage root dry matter","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/cassava_EC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"IITA Cassava Germplasm Data - Entire Collection — cassava_EC","text":"details example dataset built original data available online.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/cassava_EC.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"IITA Cassava Germplasm Data - Entire Collection — cassava_EC","text":"International Institute Tropical Agriculture, Benjamin F, Marimagne T (2019). “Cassava morphological characterization. Version 2018.1.”","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/cassava_EC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"IITA Cassava Germplasm Data - Entire Collection — cassava_EC","text":"","code":"data(cassava_EC) summary(cassava_EC) #>      CUAL               LNGS               PTLC               DSTA           #>  Length:1684        Length:1684        Length:1684        Length:1684        #>  Class :character   Class :character   Class :character   Class :character   #>  Mode  :character   Mode  :character   Mode  :character   Mode  :character   #>                                                                              #>                                                                              #>                                                                              #>      LFRT              LBTEF               CBTR               NMLB           #>  Length:1684        Length:1684        Length:1684        Length:1684        #>  Class :character   Class :character   Class :character   Class :character   #>  Mode  :character   Mode  :character   Mode  :character   Mode  :character   #>                                                                              #>                                                                              #>                                                                              #>      ANGB              CUAL9M             LVC9M              TNPR9M          #>  Length:1684        Length:1684        Length:1684        Length:1684        #>  Class :character   Class :character   Class :character   Class :character   #>  Mode  :character   Mode  :character   Mode  :character   Mode  :character   #>                                                                              #>                                                                              #>                                                                              #>      PL9M               STRP               STRC               PSTR           #>  Length:1684        Length:1684        Length:1684        Length:1684        #>  Class :character   Class :character   Class :character   Class :character   #>  Mode  :character   Mode  :character   Mode  :character   Mode  :character   #>                                                                              #>                                                                              #>                                                                              #>       NMSR            TTRN            TFWSR             TTRW        #>  Min.   : 1.00   Min.   : 0.250   Min.   : 0.000   Min.   : 0.000   #>  1st Qu.: 6.00   1st Qu.: 2.500   1st Qu.: 2.200   1st Qu.: 0.900   #>  Median :10.00   Median : 3.600   Median : 4.200   Median : 1.445   #>  Mean   :11.72   Mean   : 3.854   Mean   : 5.429   Mean   : 1.898   #>  3rd Qu.:16.00   3rd Qu.: 5.000   3rd Qu.: 7.000   3rd Qu.: 2.400   #>  Max.   :55.00   Max.   :13.750   Max.   :40.000   Max.   :20.200   #>      TFWSS             TTSW             TTPW            AVPW        #>  Min.   : 0.200   Min.   : 0.040   Min.   : 0.40   Min.   : 0.200   #>  1st Qu.: 2.600   1st Qu.: 1.000   1st Qu.: 5.20   1st Qu.: 2.062   #>  Median : 5.400   Median : 1.933   Median :10.00   Median : 3.400   #>  Mean   : 6.943   Mean   : 2.388   Mean   :12.37   Mean   : 4.285   #>  3rd Qu.:10.000   3rd Qu.: 3.200   3rd Qu.:16.45   3rd Qu.: 5.533   #>  Max.   :42.000   Max.   :22.000   Max.   :80.00   Max.   :33.000   #>       ARSR             SRDM       #>  Min.   : 0.000   Min.   : 0.50   #>  1st Qu.: 0.000   1st Qu.:35.20   #>  Median : 1.000   Median :38.50   #>  Mean   : 1.858   Mean   :37.77   #>  3rd Qu.: 3.000   3rd Qu.:41.20   #>  Max.   :18.000   Max.   :48.90    quant <- c(\"NMSR\", \"TTRN\", \"TFWSR\", \"TTRW\", \"TFWSS\", \"TTSW\", \"TTPW\", \"AVPW\",            \"ARSR\", \"SRDM\") qual <- c(\"CUAL\", \"LNGS\", \"PTLC\", \"DSTA\", \"LFRT\", \"LBTEF\", \"CBTR\", \"NMLB\",           \"ANGB\", \"CUAL9M\", \"LVC9M\", \"TNPR9M\", \"PL9M\", \"STRP\", \"STRC\",           \"PSTR\")  lapply(seq_along(cassava_EC[, qual]),        function(i) barplot(table(cassava_EC[, qual][, i]),                            xlab = names(cassava_EC[, qual])[i]))                 #> [[1]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #> [3,]  3.1 #> [4,]  4.3 #> [5,]  5.5 #>  #> [[2]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #> [3,]  3.1 #>  #> [[3]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #> [3,]  3.1 #> [4,]  4.3 #> [5,]  5.5 #>  #> [[4]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #> [3,]  3.1 #> [4,]  4.3 #> [5,]  5.5 #>  #> [[5]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #> [3,]  3.1 #> [4,]  4.3 #> [5,]  5.5 #>  #> [[6]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #> [3,]  3.1 #> [4,]  4.3 #> [5,]  5.5 #> [6,]  6.7 #>  #> [[7]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #> [3,]  3.1 #>  #> [[8]] #>       [,1] #>  [1,]  0.7 #>  [2,]  1.9 #>  [3,]  3.1 #>  [4,]  4.3 #>  [5,]  5.5 #>  [6,]  6.7 #>  [7,]  7.9 #>  [8,]  9.1 #>  [9,] 10.3 #> [10,] 11.5 #>  #> [[9]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #> [3,]  3.1 #> [4,]  4.3 #>  #> [[10]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #> [3,]  3.1 #> [4,]  4.3 #> [5,]  5.5 #>  #> [[11]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #> [3,]  3.1 #> [4,]  4.3 #> [5,]  5.5 #>  #> [[12]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #> [3,]  3.1 #> [4,]  4.3 #> [5,]  5.5 #>  #> [[13]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #> [3,]  3.1 #>  #> [[14]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #> [3,]  3.1 #> [4,]  4.3 #>  #> [[15]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #>  #> [[16]] #>      [,1] #> [1,]  0.7 #> [2,]  1.9 #> [3,]  3.1 #>   lapply(seq_along(cassava_EC[, quant]),        function(i) hist(table(cassava_EC[, quant][, i]),                         xlab = names(cassava_EC[, quant])[i],                         main = \"\"))           #> [[1]] #> $breaks #> [1]   0  20  40  60  80 100 120 #>  #> $counts #> [1] 18  5  5  6  7  1 #>  #> $density #> [1] 0.021428571 0.005952381 0.005952381 0.007142857 0.008333333 0.001190476 #>  #> $mids #> [1]  10  30  50  70  90 110 #>  #> $xname #> [1] \"table(cassava_EC[, quant][, i])\" #>  #> $equidist #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"histogram\" #>  #> [[2]] #> $breaks #>  [1]   0  20  40  60  80 100 120 140 160 180 #>  #> $counts #> [1] 72  9  5  2  0  1  2  0  1 #>  #> $density #> [1] 0.0391304348 0.0048913043 0.0027173913 0.0010869565 0.0000000000 #> [6] 0.0005434783 0.0010869565 0.0000000000 0.0005434783 #>  #> $mids #> [1]  10  30  50  70  90 110 130 150 170 #>  #> $xname #> [1] \"table(cassava_EC[, quant][, i])\" #>  #> $equidist #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"histogram\" #>  #> [[3]] #> $breaks #> [1]  0 10 20 30 40 50 60 70 80 #>  #> $counts #> [1] 77 13  8 15  5  1  2  2 #>  #> $density #> [1] 0.0626016260 0.0105691057 0.0065040650 0.0121951220 0.0040650407 #> [6] 0.0008130081 0.0016260163 0.0016260163 #>  #> $mids #> [1]  5 15 25 35 45 55 65 75 #>  #> $xname #> [1] \"table(cassava_EC[, quant][, i])\" #>  #> $equidist #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"histogram\" #>  #> [[4]] #> $breaks #>  [1]   0  10  20  30  40  50  60  70  80  90 100 #>  #> $counts #>  [1] 204  24   7   2   2   2   2   0   0   1 #>  #> $density #>  [1] 0.0836065574 0.0098360656 0.0028688525 0.0008196721 0.0008196721 #>  [6] 0.0008196721 0.0008196721 0.0000000000 0.0000000000 0.0004098361 #>  #> $mids #>  [1]  5 15 25 35 45 55 65 75 85 95 #>  #> $xname #> [1] \"table(cassava_EC[, quant][, i])\" #>  #> $equidist #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"histogram\" #>  #> [[5]] #> $breaks #>  [1]  0  5 10 15 20 25 30 35 40 45 50 55 60 #>  #> $counts #>  [1] 75 18 11  9  9  4  5  5  6  1  1  1 #>  #> $density #>  [1] 0.103448276 0.024827586 0.015172414 0.012413793 0.012413793 0.005517241 #>  [7] 0.006896552 0.006896552 0.008275862 0.001379310 0.001379310 0.001379310 #>  #> $mids #>  [1]  2.5  7.5 12.5 17.5 22.5 27.5 32.5 37.5 42.5 47.5 52.5 57.5 #>  #> $xname #> [1] \"table(cassava_EC[, quant][, i])\" #>  #> $equidist #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"histogram\" #>  #> [[6]] #> $breaks #>  [1]  0  5 10 15 20 25 30 35 40 45 50 55 60 #>  #> $counts #>  [1] 203  37  18   6   5   3   3   6   0   0   1   1 #>  #> $density #>  [1] 0.1434628975 0.0261484099 0.0127208481 0.0042402827 0.0035335689 #>  [6] 0.0021201413 0.0021201413 0.0042402827 0.0000000000 0.0000000000 #> [11] 0.0007067138 0.0007067138 #>  #> $mids #>  [1]  2.5  7.5 12.5 17.5 22.5 27.5 32.5 37.5 42.5 47.5 52.5 57.5 #>  #> $xname #> [1] \"table(cassava_EC[, quant][, i])\" #>  #> $equidist #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"histogram\" #>  #> [[7]] #> $breaks #> [1]  0  5 10 15 20 25 30 35 #>  #> $counts #> [1] 127  32  32  25   8   5   1 #>  #> $density #> [1] 0.1104347826 0.0278260870 0.0278260870 0.0217391304 0.0069565217 #> [6] 0.0043478261 0.0008695652 #>  #> $mids #> [1]  2.5  7.5 12.5 17.5 22.5 27.5 32.5 #>  #> $xname #> [1] \"table(cassava_EC[, quant][, i])\" #>  #> $equidist #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"histogram\" #>  #> [[8]] #> $breaks #> [1]  0  5 10 15 20 25 30 35 #>  #> $counts #> [1] 347  41  19   3   7   4   2 #>  #> $density #> [1] 0.1640661939 0.0193853428 0.0089834515 0.0014184397 0.0033096927 #> [6] 0.0018912530 0.0009456265 #>  #> $mids #> [1]  2.5  7.5 12.5 17.5 22.5 27.5 32.5 #>  #> $xname #> [1] \"table(cassava_EC[, quant][, i])\" #>  #> $equidist #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"histogram\" #>  #> [[9]] #> $breaks #> [1]   0 100 200 300 400 500 600 700 #>  #> $counts #> [1] 12  2  2  0  0  0  1 #>  #> $density #> [1] 0.0070588235 0.0011764706 0.0011764706 0.0000000000 0.0000000000 #> [6] 0.0000000000 0.0005882353 #>  #> $mids #> [1]  50 150 250 350 450 550 650 #>  #> $xname #> [1] \"table(cassava_EC[, quant][, i])\" #>  #> $equidist #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"histogram\" #>  #> [[10]] #> $breaks #> [1]  0  5 10 15 20 25 30 #>  #> $counts #> [1] 123  49  40  13  11   1 #>  #> $density #> [1] 0.1037974684 0.0413502110 0.0337552743 0.0109704641 0.0092827004 #> [6] 0.0008438819 #>  #> $mids #> [1]  2.5  7.5 12.5 17.5 22.5 27.5 #>  #> $xname #> [1] \"table(cassava_EC[, quant][, i])\" #>  #> $equidist #> [1] TRUE #>  #> attr(,\"class\") #> [1] \"histogram\" #>"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/checks.evaluate.core.html","id":null,"dir":"Reference","previous_headings":"","what":"Common checks for all functions — checks.evaluate.core","title":"Common checks for all functions — checks.evaluate.core","text":"exported. Strictly internal","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/checks.evaluate.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Common checks for all functions — checks.evaluate.core","text":"","code":"checks.evaluate.core(   data,   names,   quantitative = NULL,   qualitative = NULL,   selected )"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/checks.evaluate.core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Common checks for all functions — checks.evaluate.core","text":"data data data frame object. data frame possess one row per individual columns individual names multiple trait/character data. names Name column individual names character string. quantitative Name columns quantitative traits character vector. qualitative Name columns qualitative traits character vector. selected Character vector names individuals selected core collection present names column.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/chisquare.evaluate.core.html","id":null,"dir":"Reference","previous_headings":"","what":"Chi-squared Test for Homogeneity — chisquare.evaluate.core","title":"Chi-squared Test for Homogeneity — chisquare.evaluate.core","text":"Compare distribution frequencies qualitative traits entire collection (EC) core set (CS) Chi-squared test homogeneity (Pearson 1900; Snedecor Irwin 1933) .","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/chisquare.evaluate.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chi-squared Test for Homogeneity — chisquare.evaluate.core","text":"","code":"chisquare.evaluate.core(data, names, qualitative, selected)"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/chisquare.evaluate.core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chi-squared Test for Homogeneity — chisquare.evaluate.core","text":"data data data frame object. data frame possess one row per individual columns individual names multiple trait/character data. names Name column individual names character string. qualitative Name columns qualitative traits character vector. selected Character vector names individuals selected core collection present names column.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/chisquare.evaluate.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chi-squared Test for Homogeneity — chisquare.evaluate.core","text":"data frame following columns. Trait   qualitative trait. EC_No.Classes number classes trait   EC. EC_Classes frequency classes trait   EC. CS_No.Classes number classes trait CS. CS_Classes frequency classes trait CS. chisq_statistic \\(\\chi^{2}\\) test statistic. chisq_pvalue p value test statistic. chisq_significance significance test statistic (*: p   \\(\\leq\\) 0.01; **: p \\(\\leq\\) 0.05; ns: p \\( > \\) 0.05).","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/chisquare.evaluate.core.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Chi-squared Test for Homogeneity — chisquare.evaluate.core","text":"Pearson K (1900). “X. criterion given system deviations probable case correlated system variables can reasonably supposed arisen random sampling.” London, Edinburgh, Dublin Philosophical Magazine Journal Science, 50(302), 157–175. Snedecor G, Irwin MR (1933). “chi-square test homogeneity.” Iowa State College Journal Science, 8, 75–81.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/EvaluateCore/reference/chisquare.evaluate.core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Chi-squared Test for Homogeneity — chisquare.evaluate.core","text":"","code":"data(\"cassava_CC\") data(\"cassava_EC\")  ec <- cbind(genotypes = rownames(cassava_EC), cassava_EC) ec$genotypes <- as.character(ec$genotypes) rownames(ec) <- NULL  core <- rownames(cassava_CC)  quant <- c(\"NMSR\", \"TTRN\", \"TFWSR\", \"TTRW\", \"TFWSS\", \"TTSW\", \"TTPW\", \"AVPW\",            \"ARSR\", \"SRDM\") qual <- c(\"CUAL\", \"LNGS\", \"PTLC\", \"DSTA\", \"LFRT\", \"LBTEF\", \"CBTR\", \"NMLB\",           \"ANGB\", \"CUAL9M\", \"LVC9M\", \"TNPR9M\", \"PL9M\", \"STRP\", \"STRC\",           \"PSTR\")  ec[, qual] <- lapply(ec[, qual],                      function(x) factor(as.factor(x)))  chisquare.evaluate.core(data = ec, names = \"genotypes\",                         qualitative = qual, selected = core) #>     Trait EC_No.Classes #> 1    CUAL             5 #> 2    LNGS             3 #> 3    PTLC             5 #> 4    DSTA             5 #> 5    LFRT             5 #> 6   LBTEF             6 #> 7    CBTR             3 #> 8    NMLB            10 #> 9    ANGB             4 #> 10 CUAL9M             5 #> 11  LVC9M             5 #> 12 TNPR9M             5 #> 13   PL9M             3 #> 14   STRP             4 #> 15   STRC             2 #> 16   PSTR             3 #>                                                                                                                           EC_Classes #> 1                                                         Dark green(321); Green(2); Green purple(889); Light green(48); Purple(424) #> 2                                                                                                 Long(741); Medium(791); Short(152) #> 3                                                          Dark green(20); Green purple(1008); Light green(50); Purple(578); Red(28) #> 4                                           Absent(76); Central part(770); Top and bottom(50); Top part(188); Totally pigmented(600) #> 5  100% leaf retention(1); 25-50% leaf retention(679); 50-75% leaf retention(897); <100% leaf retention(83); <25% leaf retention(24) #> 6                                                                                      0(404); 1(250); 2(388); 3(489); 4(140); 5(13) #> 7                                                                                                Cream(1048); White(610); Yellow(26) #> 8                                                             0(397); 1(185); 2(308); 3(506); 4(195); 5(72); 6(15); 7(3); 8(2); 9(1) #> 9                                                                         150-300(468); 450-600(785); 750-900(34); No branching(397) #> 10                                                       Dark green(566); Green(47); Green purple(435); Light green(33); Purple(603) #> 11                                                       Dark green(624); Green(14); Green purple(896); Light green(110); Purple(40) #> 12                                                                                            1(140); 2(252); 3(301); 4(361); 5(630) #> 13                                                                     Long (25-30cm)(887); Medium (15-20cm)(792); Short (5-10cm)(5) #> 14                                                                              Absent(555); Intermediate(459); Long(43); Short(627) #> 15                                                                                                         Absent(721); Present(963) #> 16                                                       Irregular(556); Tending toward horizontal(1125); Tending toward vertical(3) #>    CS_No.Classes #> 1              4 #> 2              3 #> 3              5 #> 4              5 #> 5              4 #> 6              6 #> 7              3 #> 8              9 #> 9              4 #> 10             5 #> 11             5 #> 12             5 #> 13             2 #> 14             4 #> 15             2 #> 16             2 #>                                                                                                                        CS_Classes #> 1                                                          Dark green(31); Green(0); Green purple(89); Light green(6); Purple(42) #> 2                                                                                                 Long(72); Medium(72); Short(24) #> 3                                                            Dark green(7); Green purple(99); Light green(12); Purple(43); Red(7) #> 4                                            Absent(22); Central part(74); Top and bottom(6); Top part(19); Totally pigmented(47) #> 5  100% leaf retention(0); 25-50% leaf retention(64); 50-75% leaf retention(88); <100% leaf retention(14); <25% leaf retention(2) #> 6                                                                                         0(32); 1(25); 2(37); 3(43); 4(28); 5(3) #> 7                                                                                                 Cream(94); White(70); Yellow(4) #> 8                                                                0(30); 1(20); 2(30); 3(54); 4(18); 5(12); 6(2); 7(1); 8(1); 9(0) #> 9                                                                          150-300(54); 450-600(76); 750-900(8); No branching(30) #> 10                                                         Dark green(51); Green(8); Green purple(48); Light green(5); Purple(56) #> 11                                                         Dark green(60); Green(4); Green purple(84); Light green(17); Purple(3) #> 12                                                                                              1(20); 2(31); 3(31); 4(32); 5(54) #> 13                                                                    Long (25-30cm)(86); Medium (15-20cm)(82); Short (5-10cm)(0) #> 14                                                                               Absent(54); Intermediate(51); Long(6); Short(57) #> 15                                                                                                       Absent(68); Present(100) #> 16                                                      Irregular(56); Tending toward horizontal(112); Tending toward vertical(0) #>    chisq_statistic chisq_pvalue chisq_significance #> 1        0.5046947   0.96920308                 ns #> 2        5.0473183   0.07839216                 ns #> 3       25.8082829   0.00039996                 ** #> 4       24.1043807   0.00009999                 ** #> 5        3.7515039   0.36366363                 ns #> 6       15.8517808   0.00859914                 ** #> 7        2.8705932   0.24817518                 ns #> 8        9.0091683   0.38416158                 ns #> 9        8.3226194   0.03959604                  * #> 10       3.9554501   0.41075892                 ns #> 11       7.2401831   0.11618838                 ns #> 12       5.0840571   0.27517248                 ns #> 13       0.6650546   0.80361964                 ns #> 14       1.6140159   0.66543346                 ns #> 15       0.3416413   0.57124288                 ns #> 16       0.3043632   1.00000000                 ns"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/corr.evaluate.core.html","id":null,"dir":"Reference","previous_headings":"","what":"Phenotypic Correlations — corr.evaluate.core","title":"Phenotypic Correlations — corr.evaluate.core","text":"Compute phenotypic correlations (Pearson 1895)  traits, plot correlation matrices correlograms (Friendly 2002)  calculate mantel correlation (Legendre Legendre 2012)  compare entire collection (EC) core set (CS).","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/corr.evaluate.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phenotypic Correlations — corr.evaluate.core","text":"","code":"corr.evaluate.core(data, names, quantitative, qualitative, selected)"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/corr.evaluate.core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Phenotypic Correlations — corr.evaluate.core","text":"data data data frame object. data frame possess one row per individual columns individual names multiple trait/character data. names Name column individual names character string. quantitative Name columns quantitative traits character vector. qualitative Name columns qualitative traits character vector. selected Character vector names individuals selected core collection present names column.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/corr.evaluate.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Phenotypic Correlations — corr.evaluate.core","text":"list following components. Correlation Matrix   matrix phenotypic correlations traits EC (diagonal)   CS (diagonal). Correologram correlogram phenotypic   correlations traits EC (diagonal) CS (diagonal)   ggplot object. Mantel Correlation data frame   Mantel correlation coefficient (\\(r\\)) EC CS phenotypic   correlation matrices, p value significance (*: p \\(\\leq\\)   0.01; **: p \\(\\leq\\) 0.05; ns: p \\( > \\) 0.05).","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/corr.evaluate.core.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Phenotypic Correlations — corr.evaluate.core","text":"Friendly M (2002). “Corrgrams.” American Statistician, 56(4), 316–324. Legendre P, Legendre L (2012). “Interpretation ecological structures.” Developments Environmental Modelling, volume 24, 521–624. Elsevier. Pearson K (1895). “Note regression inheritance case two parents.” Proceedings Royal Society London, 58, 240–242.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/EvaluateCore/reference/corr.evaluate.core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Phenotypic Correlations — corr.evaluate.core","text":"","code":"data(\"cassava_CC\") data(\"cassava_EC\")  ec <- cbind(genotypes = rownames(cassava_EC), cassava_EC) ec$genotypes <- as.character(ec$genotypes) rownames(ec) <- NULL  core <- rownames(cassava_CC)  quant <- c(\"NMSR\", \"TTRN\", \"TFWSR\", \"TTRW\", \"TFWSS\", \"TTSW\", \"TTPW\", \"AVPW\",            \"ARSR\", \"SRDM\") qual <- c(\"CUAL\", \"LNGS\", \"PTLC\", \"DSTA\", \"LFRT\", \"LBTEF\", \"CBTR\", \"NMLB\",           \"ANGB\", \"CUAL9M\", \"LVC9M\", \"TNPR9M\", \"PL9M\", \"STRP\", \"STRC\",           \"PSTR\")  ec[, qual] <- lapply(ec[, qual],                      function(x) factor(as.factor(x)))  corr.evaluate.core(data = ec, names = \"genotypes\", quantitative = quant,                    qualitative = qual, selected = core) #> $`Correlation Matrix` #>           NMSR    TTRN   TFWSR    TTRW   TFWSS    TTSW    TTPW    AVPW    ARSR #> NMSR      <NA>  0.66**  0.49**    0.08  0.61**   0.17*  0.59**    0.14  0.37** #> TTRN    0.66**    <NA>  0.39**  0.39**  0.45**  0.45**  0.44**  0.46**  0.21** #> TFWSR   0.55**  0.37**    <NA>  0.73**  0.79**  0.54**  0.93**  0.69**    0.11 #> TTRW    0.15**  0.44**  0.72**    <NA>  0.45**  0.68**  0.61**  0.91**   -0.06 #> TFWSS   0.70**  0.49**  0.76**  0.45**    <NA>  0.72**  0.95**  0.64**    0.04 #> TTSW    0.28**  0.57**  0.51**  0.69**  0.71**    <NA>  0.67**  0.92**   -0.14 #> TTPW    0.68**  0.47**  0.92**  0.60**  0.95**  0.66**    <NA>  0.70**    0.08 #> AVPW    0.24**  0.56**  0.65**  0.90**  0.65**  0.93**  0.69**    <NA>   -0.11 #> ARSR    0.27**  0.17**  0.08**   -0.04   -0.02 -0.14**    0.02 -0.10**    <NA> #> SRDM    0.08**    0.01    0.02   -0.04    0.00  -0.06*    0.01  -0.06*    0.03 #> CUAL    0.18**  0.17**  0.12**  0.08**  0.22**  0.20**  0.19**  0.16**    0.05 #> LNGS   -0.17** -0.16** -0.17** -0.14** -0.17** -0.14** -0.18** -0.15**   -0.04 #> PTLC   -0.23** -0.22** -0.15** -0.11** -0.22** -0.19** -0.20** -0.17** -0.08** #> DSTA   -0.15** -0.15** -0.10** -0.08** -0.16** -0.13** -0.14** -0.12**  -0.06* #> LFRT    0.07**  0.09**  0.10**  0.11**  0.11**  0.12**  0.11**  0.12**  0.10** #> LBTEF   0.33**  0.32**  0.33**  0.26**  0.38**  0.31**  0.38**  0.31**   -0.01 #> CBTR   -0.17** -0.09** -0.08**    0.01 -0.16** -0.06** -0.13**   -0.03   -0.03 #> NMLB    0.32**  0.30**  0.32**  0.25**  0.38**  0.30**  0.37**  0.30**   -0.01 #> ANGB   -0.17** -0.15** -0.17** -0.13** -0.15** -0.09** -0.17** -0.12**   -0.02 #> CUAL9M  0.25**  0.23**  0.13**  0.07**  0.29**  0.24**  0.24**  0.18**   -0.02 #> LVC9M  -0.19** -0.15**   -0.03    0.02 -0.18** -0.12** -0.12**  -0.06*   -0.02 #> TNPR9M  0.55**   0.06*  0.33** -0.09**  0.36** -0.07**  0.37** -0.09**  0.20** #> PL9M     -0.04  -0.06* -0.08** -0.09**   -0.04  -0.05*  -0.06* -0.07**   -0.00 #> STRP   -0.09** -0.09**  -0.05*   -0.03 -0.10** -0.10** -0.09** -0.07**   -0.01 #> STRC     0.06*  0.07**  0.12**  0.11**  0.07**   0.06*  0.10**  0.09**  0.07** #> PSTR   -0.34** -0.27** -0.19** -0.07** -0.29** -0.18** -0.26** -0.14**    0.01 #>           SRDM    CUAL    LNGS    PTLC    DSTA    LFRT   LBTEF    CBTR    NMLB #> NMSR     -0.01    0.08   -0.06   -0.06   -0.02    0.10  0.28**   -0.13    0.15 #> TTRN     -0.10    0.15   -0.04   -0.14   -0.00    0.14  0.33**    0.03  0.20** #> TFWSR    -0.04    0.12   -0.13   -0.13   -0.10    0.07  0.36**    0.04  0.26** #> TTRW     -0.09    0.14   -0.10  -0.16*   -0.07    0.11  0.27**   0.17*  0.23** #> TFWSS    -0.11    0.11   -0.13   -0.05   -0.03   0.18*  0.34**   -0.02  0.24** #> TTSW    -0.16*   0.17*   -0.10   -0.11   -0.02  0.26**  0.27**    0.14  0.20** #> TTPW     -0.08    0.12   -0.13   -0.10   -0.07    0.14  0.37**    0.01  0.26** #> AVPW     -0.14   0.17*   -0.11   -0.15   -0.05  0.21**  0.29**   0.17*  0.23** #> ARSR      0.08    0.15   -0.12  -0.19*   -0.15    0.02    0.07    0.07   -0.02 #> SRDM      <NA>   -0.01  0.22**   -0.04   -0.04  -0.16*   -0.04   -0.03   -0.03 #> CUAL   -0.07**    <NA>   -0.11    0.01    0.07    0.09    0.09   -0.04    0.04 #> LNGS      0.03 -0.13**    <NA>    0.03   -0.07   -0.01  -0.15*    0.02   -0.10 #> PTLC     -0.01 -0.15**  0.07**    <NA>  0.67**   -0.12   -0.08   -0.02   -0.09 #> DSTA     -0.02  -0.06*    0.00  0.82**    <NA>   -0.06   -0.10    0.01   -0.15 #> LFRT     -0.05    0.04   -0.00 -0.12** -0.11**    <NA>   -0.04    0.01    0.01 #> LBTEF     0.05  0.17** -0.17** -0.17** -0.11**  -0.06*    <NA>    0.00  0.75** #> CBTR     -0.02 -0.09**    0.02  0.07**   0.05*   -0.03 -0.08**    <NA>   -0.08 #> NMLB      0.03  0.17** -0.12** -0.17** -0.13**   -0.03  0.78** -0.12**    <NA> #> ANGB     -0.04  -0.05*  0.10**    0.03    0.01  0.07** -0.55**    0.04 -0.60** #> CUAL9M -0.07**  0.49** -0.18** -0.20** -0.10**    0.02  0.28** -0.20**  0.27** #> LVC9M    -0.03 -0.15**  0.12**  0.44**  0.35**   -0.03 -0.16**  0.20** -0.24** #> TNPR9M  0.11**  0.09** -0.09**  -0.06*   -0.02   -0.02  0.16** -0.18**  0.17** #> PL9M      0.04   -0.00  0.12** -0.09** -0.10** -0.08**  0.17**   -0.01  0.21** #> STRP      0.04 -0.07**  0.13**  0.12**  0.07**   -0.01   -0.04  0.10** -0.07** #> STRC      0.03   -0.01    0.00    0.01   -0.01    0.04    0.04   -0.03   0.06* #> PSTR     -0.05 -0.08**  0.08**  0.10**  0.06**   -0.01 -0.16**  0.14** -0.20** #>           ANGB  CUAL9M   LVC9M  TNPR9M  PL9M    STRP  STRC    PSTR #> NMSR     -0.13    0.14   -0.13  0.53**  0.01    0.00  0.13 -0.29** #> TTRN     -0.09  0.21**   -0.07    0.03 -0.00    0.04 0.19* -0.29** #> TFWSR    -0.05    0.14   -0.02  0.22** -0.03   -0.02 0.18*   -0.10 #> TTRW     -0.01    0.09    0.01  -0.17* -0.05    0.03  0.11    0.02 #> TFWSS    -0.06  0.23**   -0.01  0.31** -0.08   -0.06 0.16*  -0.20* #> TTSW      0.02   0.20*    0.05   -0.11 -0.07   -0.06  0.11   -0.06 #> TTPW     -0.05  0.20**   -0.02  0.28** -0.06   -0.05 0.18*  -0.16* #> AVPW      0.01   0.16*    0.04  -0.15* -0.07   -0.02  0.12   -0.03 #> ARSR     -0.03   -0.03   -0.13  0.26**  0.05   -0.00  0.09   -0.00 #> SRDM     -0.02   -0.14   -0.05    0.05  0.05    0.01  0.12    0.00 #> CUAL      0.09  0.38**   -0.11   -0.02 -0.02   -0.12  0.04   -0.04 #> LNGS     -0.01 -0.25**    0.08   -0.15  0.11    0.05 -0.02   -0.04 #> PTLC     -0.10   -0.07  0.26**    0.04  0.00    0.10 -0.04    0.08 #> DSTA     -0.04   -0.03  0.25**   -0.02 -0.11    0.00  0.01    0.06 #> LFRT      0.08    0.06    0.03    0.02 -0.01   -0.11  0.03   -0.08 #> LBTEF  -0.43**  0.20**    0.01    0.01  0.03   -0.02  0.06   -0.10 #> CBTR     -0.08   -0.15   0.19* -0.21**  0.02    0.10  0.06    0.12 #> NMLB   -0.43**    0.14   -0.14    0.02  0.14   -0.01  0.03  -0.17* #> ANGB      <NA>   -0.03    0.00   -0.05 -0.04   -0.06  0.07    0.06 #> CUAL9M -0.08**    <NA> -0.20**    0.03 -0.04 -0.20**  0.13   -0.13 #> LVC9M    0.06* -0.29**    <NA>   -0.12 -0.05   0.16*  0.06    0.06 #> TNPR9M -0.15**  0.11** -0.11**    <NA>  0.02   -0.10  0.03 -0.21** #> PL9M   -0.08**   0.05* -0.14**    0.02  <NA>   -0.01 -0.02    0.01 #> STRP     0.05* -0.16**  0.22** -0.11**  0.01    <NA>  0.11    0.02 #> STRC     -0.01    0.02    0.03    0.03  0.00  0.09**  <NA>   -0.12 #> PSTR    0.08** -0.17**  0.22** -0.21** -0.00  0.14** -0.01    <NA> #>  #> $Correologram  #>  #> $`Mantel Correlation` #>           r p.value significance #> 1 0.9489496   0.001           ** #>"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/coverage.evaluate.core.html","id":null,"dir":"Reference","previous_headings":"","what":"Class Coverage — coverage.evaluate.core","title":"Class Coverage — coverage.evaluate.core","text":"Compute Class Coverage (Kim et al. 2007)  compare distribution frequencies qualitative traits entire collection (EC) core set (CS).","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/coverage.evaluate.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class Coverage — coverage.evaluate.core","text":"","code":"coverage.evaluate.core(data, names, qualitative, selected)"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/coverage.evaluate.core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class Coverage — coverage.evaluate.core","text":"data data data frame object. data frame possess one row per individual columns individual names multiple trait/character data. names Name column individual names character string. qualitative Name columns qualitative traits character vector. selected Character vector names individuals selected core collection present names column.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/coverage.evaluate.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class Coverage — coverage.evaluate.core","text":"Class Coverage value.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/coverage.evaluate.core.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class Coverage — coverage.evaluate.core","text":"Class Coverage (Kim et al. 2007)  computed follows. \\[Class\\, Coverage = \\left ( \\frac{1}{n} \\sum_{=1}^{n} \\frac{k_{CS_{}}}{k_{EC_{}}} \\right ) \\times 100\\] , \\(k_{CS_{}}\\) number phenotypic classes CS \\(\\)th trait, \\(k_{EC_{}}\\) number phenotypic classes EC \\(\\)th trait \\(n\\) total number traits.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/coverage.evaluate.core.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Class Coverage — coverage.evaluate.core","text":"Kim K, Chung H, Cho G, Ma K, Chandrabalan D, Gwag J, Kim T, Cho E, Park Y (2007). “PowerCore: program applying advanced M strategy heuristic search establishing core sets.” Bioinformatics, 23(16), 2155–2162.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/coverage.evaluate.core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class Coverage — coverage.evaluate.core","text":"","code":"data(\"cassava_CC\") data(\"cassava_EC\")  ec <- cbind(genotypes = rownames(cassava_EC), cassava_EC) ec$genotypes <- as.character(ec$genotypes) rownames(ec) <- NULL  core <- rownames(cassava_CC)  quant <- c(\"NMSR\", \"TTRN\", \"TFWSR\", \"TTRW\", \"TFWSS\", \"TTSW\", \"TTPW\", \"AVPW\",            \"ARSR\", \"SRDM\") qual <- c(\"CUAL\", \"LNGS\", \"PTLC\", \"DSTA\", \"LFRT\", \"LBTEF\", \"CBTR\", \"NMLB\",           \"ANGB\", \"CUAL9M\", \"LVC9M\", \"TNPR9M\", \"PL9M\", \"STRP\", \"STRC\",           \"PSTR\")  ec[, qual] <- lapply(ec[, qual],                      function(x) factor(as.factor(x)))  coverage.evaluate.core(data = ec, names = \"genotypes\",                        qualitative = qual, selected = core) #> [1] 92.70833"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/cr.evaluate.core.html","id":null,"dir":"Reference","previous_headings":"","what":"Coincidence Rate of Range — cr.evaluate.core","title":"Coincidence Rate of Range — cr.evaluate.core","text":"Compute following metrics compare quantitative traits entire collection (EC) core set (CS). Changeable Rate Maximum (\\(CR_{\\max}\\)) (Wang et al. 2007) Changeable Rate Minimum (\\(CR_{\\min}\\)) (Wang et al. 2007) Changeable Rate Mean (\\(CR_{\\mu}\\)) (Wang et al. 2007)","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/cr.evaluate.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coincidence Rate of Range — cr.evaluate.core","text":"","code":"cr.evaluate.core(data, names, quantitative, selected)"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/cr.evaluate.core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coincidence Rate of Range — cr.evaluate.core","text":"data data data frame object. data frame possess one row per individual columns individual names multiple trait/character data. names Name column individual names character string. quantitative Name columns quantitative traits character vector. selected Character vector names individuals selected core collection present names column.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/cr.evaluate.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coincidence Rate of Range — cr.evaluate.core","text":"\\(CR\\) value.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/cr.evaluate.core.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coincidence Rate of Range — cr.evaluate.core","text":"Coincidence Rate Range (\\(CR\\)) computed follows. \\[CR = \\left ( \\frac{1}{n} \\sum_{=1}^{n} \\frac{R_{CS_{}}}{R_{EC_{}}} \\right ) \\times 100\\] , \\(R_{CS_{}}\\) range \\(\\)th trait CS, \\(R_{EC_{}}\\) range \\(\\)th trait EC \\(n\\) total number traits. representative CS \\(CR\\) value less 70% (Diwan et al. 1995)  80% (Hu et al. 2000) . Changeable Rate Maximum (\\(CR_{\\max}\\)) computed follows. \\[CR_{\\max} = \\left ( \\frac{1}{n} \\sum_{=1}^{n} \\frac{\\max_{CS_{}}}{\\max_{EC_{}}} \\right ) \\times 100\\] , \\(\\max_{CS_{}}\\) maximum value \\(\\)th trait CS, \\(\\max_{EC_{}}\\) maximum value \\(\\)th trait EC \\(n\\) total number traits. Changeable Rate Minimum (\\(CR_{\\min}\\)) computed follows. \\[CR_{\\min} = \\left ( \\frac{1}{n} \\sum_{=1}^{n} \\frac{\\min_{CS_{}}}{\\min_{EC_{}}} \\right ) \\times 100\\] , \\(\\min_{CS_{}}\\) minimum value \\(\\)th trait CS, \\(\\min_{EC_{}}\\) minimum value \\(\\)th trait EC \\(n\\) total number traits. Changeable Rate Mean (\\(CR_{\\mu}\\)) computed follows. \\[CR_{\\mu} = \\left ( \\frac{1}{n} \\sum_{=1}^{n} \\frac{\\mu_{CS_{}}}{\\mu_{EC_{}}} \\right ) \\times 100\\] , \\(\\mu_{CS_{}}\\) mean value \\(\\)th trait CS, \\(\\mu_{EC_{}}\\) mean value \\(\\)th trait EC \\(n\\) total number traits.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/cr.evaluate.core.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Coincidence Rate of Range — cr.evaluate.core","text":"NaN Inf values \\(CR_{\\min}\\) occurs   minimum values traits zero.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/cr.evaluate.core.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Coincidence Rate of Range — cr.evaluate.core","text":"Diwan N, McIntosh MS, Bauchan GR (1995). “Methods developing core collection annual Medicago species.” Theoretical Applied Genetics, 90(6), 755–761. Hu J, Zhu J, Xu HM (2000). “Methods constructing core collections stepwise clustering three sampling strategies based genotypic values crops.” Theoretical Applied Genetics, 101(1), 264–268. Wang J, Hu J, Zhang C, Zhang S (2007). “Assessment evaluating parameters rice core collections constructed genotypic values molecular marker information.” Rice Science, 14(2), 101–110.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/EvaluateCore/reference/cr.evaluate.core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coincidence Rate of Range — cr.evaluate.core","text":"","code":"data(\"cassava_CC\") data(\"cassava_EC\")  ec <- cbind(genotypes = rownames(cassava_EC), cassava_EC) ec$genotypes <- as.character(ec$genotypes) rownames(ec) <- NULL  core <- rownames(cassava_CC)  quant <- c(\"NMSR\", \"TTRN\", \"TFWSR\", \"TTRW\", \"TFWSS\", \"TTSW\", \"TTPW\", \"AVPW\",            \"ARSR\", \"SRDM\") qual <- c(\"CUAL\", \"LNGS\", \"PTLC\", \"DSTA\", \"LFRT\", \"LBTEF\", \"CBTR\", \"NMLB\",           \"ANGB\", \"CUAL9M\", \"LVC9M\", \"TNPR9M\", \"PL9M\", \"STRP\", \"STRC\",           \"PSTR\")  ec[, qual] <- lapply(ec[, qual],                      function(x) factor(as.factor(x)))  cr.evaluate.core(data = ec, names = \"genotypes\",                  quantitative = quant, selected = core) #>        CR    CR_Max    CR_Min   CR_Mean  #>  89.23084  93.78085       NaN 112.80763"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/dist.evaluate.core.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance Measures — dist.evaluate.core","title":"Distance Measures — dist.evaluate.core","text":"Compute average Entry--nearest-entry distance (\\(E\\text{-}EN\\)), Accession--nearest-entry distance (\\(E\\text{-}EN\\)) Entry--entry distance (\\(E\\text{-}EN\\)) (Odong et al. 2013)  evaluate core set (CS) selected entire collection (EC).","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/dist.evaluate.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance Measures — dist.evaluate.core","text":"","code":"dist.evaluate.core(data, names, quantitative, qualitative, selected, d = NULL)"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/dist.evaluate.core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance Measures — dist.evaluate.core","text":"data data data frame object. data frame possess one row per individual columns individual names multiple trait/character data. names Name column individual names character string. quantitative Name columns quantitative traits character vector. qualitative Name columns qualitative traits character vector. selected Character vector names individuals selected core collection present names column. d distance matrix class \"dist\" individual names names column data labels. NULL (default), distance matrix computed using Gower's metric.  .","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/dist.evaluate.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance Measures — dist.evaluate.core","text":"data frame average values \\(E\\text{-}EN\\), \\(E\\text{-}EN\\) \\(E\\text{-}EN\\).","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/dist.evaluate.core.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Distance Measures — dist.evaluate.core","text":"Adummy (2025). “keys package EvaluateCore avalable.” Failed insert reference keys:     odong_quality_2013, gower_general_1971 package = 'EvaluateCore'. Possible cause - missing REFERENCES.bib package 'EvaluateCore' 'EvaluateCore' installed. Odong TL, Jansen J, van Eeuwijk FA, van Hintum TJL (2013). “Quality core collections effective utilisation genetic resources review, discussion interpretation.” Theoretical Applied Genetics, 126(2), 289–305.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/EvaluateCore/reference/dist.evaluate.core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance Measures — dist.evaluate.core","text":"","code":"data(\"cassava_CC\") data(\"cassava_EC\")  ec <- cbind(genotypes = rownames(cassava_EC), cassava_EC) ec$genotypes <- as.character(ec$genotypes) rownames(ec) <- NULL  core <- rownames(cassava_CC)  quant <- c(\"NMSR\", \"TTRN\", \"TFWSR\", \"TTRW\", \"TFWSS\", \"TTSW\", \"TTPW\", \"AVPW\",            \"ARSR\", \"SRDM\") qual <- c(\"CUAL\", \"LNGS\", \"PTLC\", \"DSTA\", \"LFRT\", \"LBTEF\", \"CBTR\", \"NMLB\",           \"ANGB\", \"CUAL9M\", \"LVC9M\", \"TNPR9M\", \"PL9M\", \"STRP\", \"STRC\",           \"PSTR\")  ec[, qual] <- lapply(ec[, qual],                      function(x) factor(as.factor(x)))  dist.evaluate.core(data = ec, names = \"genotypes\", quantitative = quant,                    qualitative = qual, selected = core) #>   Average.distance     Value #> 1             E-NE 0.2592901 #> 2             A-NE 0.1537492 #> 3              E-E 0.4461421  # \\donttest{ #################################### # Compare with corehunter ####################################  library(corehunter) #> Loading required package: rJava # Prepare phenotype dataset dtype <- c(rep(\"RD\", length(quant)),            rep(\"NS\", length(qual))) rownames(ec) <- ec[, \"genotypes\"] ecdata <- corehunter::phenotypes(data = ec[, c(quant, qual)],                                  types = dtype)  # Compute average distances EN <- evaluateCore(core = rownames(cassava_CC), data = ecdata,                    objective = objective(\"EN\", \"GD\")) AN <- evaluateCore(core = rownames(cassava_CC), data = ecdata,                    objective = objective(\"AN\", \"GD\")) EE <- evaluateCore(core = rownames(cassava_CC), data = ecdata,                    objective = objective(\"EE\", \"GD\")) EN #> [1] 0.2592901 AN #> [1] 0.1537492 EE #> [1] 0.4461421 # }"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/diversity.evaluate.core.html","id":null,"dir":"Reference","previous_headings":"","what":"Diversity Indices — diversity.evaluate.core","title":"Diversity Indices — diversity.evaluate.core","text":"Compute following diversity indices perform corresponding statistical tests compare phenotypic diversity qualitative traits entire collection (EC) core set (CS). Simpson's related indices Simpson's Index (\\(d\\)) (Simpson 1949; Peet 1974) Simpson's Index Diversity Gini's Diversity Index Gini-Simpson Index Nei's Diversity Index Nei's Variation Index (\\(D\\)) (Gini 1912, 1912; Greenberg 1956; Berger Parker 1970; Nei 1973; Peet 1974) Maximum Simpson's Index Diversity Maximum Nei's Diversity/Variation Index (\\(D_{max}\\)) (Hennink Zeven 1990) Simpson's Reciprocal Index Hill's \\(N_{2}\\) (\\(D_{R}\\)) (Williams 1964; Hill 1973) Relative Simpson's Index Diversity Relative Nei's Diversity/Variation Index (\\(D'\\)) (Hennink Zeven 1990) Shannon-Weaver related indices Shannon Shannon-Weaver Shannon-Weiner Diversity Index (\\(H\\)) (Shannon Weaver 1949; Peet 1974) Maximum Shannon-Weaver Diversity Index (\\(H_{max}\\)) (Hennink Zeven 1990) Relative Shannon-Weaver Diversity Index Shannon Equitability Index (\\(H'\\)) (Hennink Zeven 1990) McIntosh Diversity Index McIntosh Diversity Index (\\(D_{Mc}\\)) (McIntosh 1967; Peet 1974)","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/diversity.evaluate.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diversity Indices — diversity.evaluate.core","text":"","code":"diversity.evaluate.core(data, names, qualitative, selected, base = 2, R = 1000)"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/diversity.evaluate.core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diversity Indices — diversity.evaluate.core","text":"data data data frame object. data frame possess one row per individual columns individual names multiple trait/character data. names Name column individual names character string. qualitative Name columns qualitative traits character vector. selected Character vector names individuals selected core collection present names column. base logarithm base used computation Shannon-Weaver Diversity Index (\\(\\)). Default 2. R number bootstrap replicates. Default 1000.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/diversity.evaluate.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diversity Indices — diversity.evaluate.core","text":"list three data frames follows. simpson  EC_No.Classes number classes trait EC. CS_No.Classes number classes trait CS. EC_d Simpson's Index (\\(d\\)) EC. EC_D Simpson's Index Diversity (\\(D\\)) EC. EC_D.max Maximum Simpson's Index Diversity   (\\(D_{max}\\)) EC. EC_D.inv Simpson's Reciprocal   Index (\\(D_{R}\\)) EC. EC_D.rel Relative   Reciprocal Index (\\(D'\\)) EC. EC_d.V variance   \\(d\\) EC according   (Simpson 1949) . EC_d.boot.V bootstrap variance \\(d\\) EC. CS_d Simpson's Index (\\(d\\)) CS. CS_D Simpson's Index Diversity (\\(D\\)) CS. CS_D.max Maximum Simpson's Index Diversity   (\\(D_{max}\\)) CS. CS_D.inv Simpson's Reciprocal   Index (\\(D_{R}\\)) CS. CS_D.rel Relative   Reciprocal Index (\\(D'\\)) CS. CS_d.V variance   \\(d\\) CS according   (Simpson 1949) . CS_d.boot.V bootstrap variance \\(d\\) CS. d.t.df degrees freedom t test. d.t.stat t statistic. d.t.pvalue p   value t test. d.t.significance  significance t   test t-test d.boot.z.df degrees freedom   bootstrap z score. d.boot.z.stat bootstrap z score. d.boot.z.pvalue p value z score. d.boot.z.significance significance z score.  shannon  EC_No.Classes number classes trait   EC. CS_No.Classes number classes trait   CS. EC_I Shannon-Weaver Diversity Index (\\(\\))   EC. EC_I.max Maximum Shannon-Weaver Diversity Index   (\\(I_{max}\\)) EC. EC_I.rel Relative   Shannon-Weaver Diversity Index (\\('\\)) EC. EC_I.V variance \\(\\) EC according   (Hutcheson 1970) . EC_I.boot.V bootstrap variance \\(\\) EC. CS_I Shannon-Weaver Diversity Index (\\(\\)) CS. CS_I.max Maximum Shannon-Weaver Diversity Index   (\\(I_{max}\\)) CS. CS_I.rel Relative   Shannon-Weaver Diversity Index (\\('\\)) CS. CS_I.V variance \\(\\) CS according   (Hutcheson 1970) . CS_I.boot.V bootstrap variance \\(\\) CS. .t.stat t statistic. .t.df degrees   freedom t test. .t.pvalue p value t test. .t.significance  significance t test t-test .boot.z.df degrees freedom bootstrap z score. .boot.z.stat bootstrap z score. .boot.z.pvalue p value z score. .boot.z.significance significance z score.  mcintosh  CS_No.Classes number   classes trait CS. EC_D.Mc McIntosh Index   (\\(D_{Mc}\\)) EC. CS_D.Mc McIntosh Index   (\\(D_{Mc}\\)) CS. M.boot.z.stat bootstrap z   score. M.boot.z.df degrees freedom bootstrap z   score. M.boot.z.pvalue p value z score. M.boot.z.significance significance z score.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/diversity.evaluate.core.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Diversity Indices — diversity.evaluate.core","text":"diversity indices corresponding statistical   tests implemented diversity.evaluate.core follows.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/diversity.evaluate.core.html","id":"simpson-s-and-related-indices","dir":"Reference","previous_headings":"","what":"Simpson's and related indices","title":"Diversity Indices — diversity.evaluate.core","text":"Simpson's index (\\(d\\))   estimates probability two accessions randomly selected   belong phenotypic class trait, computed follows   (Simpson 1949; Peet 1974) . \\[d = \\sum_{= 1}^{k}p_{}^{2}\\] , \\(p_{}\\) denotes proportion/fraction/frequency   accessions \\(\\)th phenotypic class trait \\(k\\)   number phenotypic classes trait. value \\(d\\) can range 0 1 0 representing maximum   diversity 1, diversity. \\(d\\) subtracted 1 give Simpson's index diversity   (\\(D\\))   (Greenberg 1956; Berger Parker 1970; Peet 1974; Hennink Zeven 1990)     originally suggested   Gini (1912, 1912)     described literature Gini's diversity index Gini-Simpson   index. Nei's diversity index Nei's variation index   (Nei 1973; Hennink Zeven 1990) .   Greater value \\(D\\), greater diversity range 0   1. \\[D = 1 - d\\] maximum value \\(D\\), \\(D_{max}\\) occurs accessions   uniformly distributed across phenotypic classes computed   follows (Hennink Zeven 1990) . \\[D_{max} = 1 - \\frac{1}{k}\\] Reciprocal \\(d\\) gives Simpson's reciprocal index   (\\(D_{R}\\))   (Williams 1964; Hennink Zeven 1990)     can range 1 \\(k\\). also described   Hill (1973)  (\\(N_{2}\\)). \\[D_{R} = \\frac{1}{d}\\] Relative Simpson's index diversity Relative Nei's diversity/variation   index (\\(H'\\)) (Hennink Zeven 1990)    defined follows (Peet 1974) . \\[D' = \\frac{D}{D_{max}}\\] Differences Simpson's diversity index qualitative traits EC   CS can tested t-test using associated variance estimate   described Simpson (1949)    (Lyons Hutcheson 1978) . t statistic computed follows. \\[t = \\frac{d_{EC} - d_{CS}}{\\sqrt{V_{d_{EC}} + V_{d_{CS}}}}\\] , variance \\(d\\) (\\(V_{d}\\)) , \\[V_{d} = \\frac{4N(N-1)(N-2)\\sum_{=1}^{k}(p_{})^{3} +   2N(N-1)\\sum_{=1}^{k}(p_{})^{2} - 2N(N-1)(2N-3) \\left(   \\sum_{=1}^{k}(p_{})^{2} \\right)^{2}}{[N(N-1)]^{2}}\\] associated degrees freedom computed follows. \\[df = (k_{EC} - 1) + (k_{CS} - 1)\\] , \\(k_{EC}\\) \\(k_{CS}\\) number phenotypic   classes trait EC CS respectively.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/diversity.evaluate.core.html","id":"shannon-weaver-and-related-indices","dir":"Reference","previous_headings":"","what":"Shannon-Weaver and related indices","title":"Diversity Indices — diversity.evaluate.core","text":"index information   \\(H\\), described   Shannon Weaver (1949)  follows. \\[H = -\\sum_{=1}^{k}p_{} \\log_{2}(p_{})\\] \\(H\\) described Shannon Shannon-Weaver Shannon-Weiner   diversity index literature. Alternatively, \\(H\\) also computed using natural logarithm instead   logarithm base 2. \\[H = -\\sum_{=1}^{k}p_{} \\ln(p_{})\\] maximum value \\(H\\) (\\(H_{max}\\)) \\(\\ln(k)\\).   value occurs phenotypic class trait proportion   accessions. \\[H_{max} = \\log_{2}(k)\\;\\; \\textrm{} \\;\\; H_{max} = \\ln(k)\\] relative Shannon-Weaver diversity index Shannon equitability index   (\\(H'\\)) Shannon diversity index (\\(\\)) divided   maximum diversity (\\(H_{max}\\)). \\[H' = \\frac{H}{H_{max}}\\] Differences Shannon-Weaver diversity index qualitative traits EC   CS can tested Hutcheson t-test   (Hutcheson 1970) . Hutcheson t statistic computed follows. \\[t = \\frac{H_{EC} - H_{CS}}{\\sqrt{V_{H_{EC}} + V_{H_{CS}}}}\\] , variance \\(H\\) (\\(V_{H}\\)) , \\[V_{H} = \\frac{\\sum_{=1}^{k}n_{}(\\log_{2}{n_{}})^{2}   \\frac{(\\sum_{=1}^{k}\\log_{2}{n_{}})^2}{N}}{N^{2}}\\] \\[\\textrm{}\\] \\[V_{H} = \\frac{\\sum_{=1}^{k}n_{}(\\ln{n_{}})^{2}   \\frac{(\\sum_{=1}^{k}\\ln{n_{}})^2}{N}}{N^{2}}\\] associated degrees freedom approximated follows. \\[df = \\frac{(V_{H_{EC}} +   V_{H_{CS}})^{2}}{\\frac{V_{H_{EC}}^{2}}{N_{EC}} +   \\frac{V_{H_{CS}}^{2}}{N_{CS}}}\\]","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/diversity.evaluate.core.html","id":"mcintosh-diversity-index","dir":"Reference","previous_headings":"","what":"McIntosh Diversity Index","title":"Diversity Indices — diversity.evaluate.core","text":"similar index diversity   described McIntosh (1967)    follows (\\(D_{Mc}\\)) (Peet 1974) . \\[D_{Mc} = \\frac{N - \\sqrt{\\sum_{=1}^{k}n_{}^2}}{N - \\sqrt{N}}\\] , \\(n_{}\\) denotes number accessions \\(\\)th   phenotypic class trait \\(N\\) total number   accessions \\(p_{} = {n_{}}/{N}\\).","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/diversity.evaluate.core.html","id":"testing-for-difference-with-bootstrapping","dir":"Reference","previous_headings":"","what":"Testing for difference with bootstrapping","title":"Diversity Indices — diversity.evaluate.core","text":"Bootstrap statistics   employed test difference Simpson, Shannon-Weaver   McIntosh indices  qualitative traits EC CS   (Solow 1993) . \\(I_{EC}\\) \\(I_{CS}\\) diversity indices   original number accessions, random samples size   original repeatedly generated (replacement) \\(R\\) times   corresponding diversity index computed sample. \\[I_{EC}^{*} = \\lbrace H_{EC_{1}}, H_{EC_{}}, \\cdots, H_{EC_{R}}   \\rbrace\\] \\[I_{CS}^{*} = \\lbrace H_{CS_{1}}, H_{CS_{}}, \\cdots, H_{CS_{R}}   \\rbrace\\] bootstrap null sample \\(I_{0}\\) computed follows. \\[\\Delta^{*} = I_{EC}^{*} - I_{CS}^{*}\\] \\[I_{0} = \\Delta^{*} - \\overline{\\Delta^{*}}\\] , \\(\\overline{\\Delta^{*}}\\) mean \\(\\Delta^{*}\\). Now original difference diversity indices (\\(\\Delta_{0} =   I_{EC} - I_{CS}\\)) tested mean bootstrap null sample   (\\(I_{0}\\)) z test. z score test statistic computed   follows. \\[z = \\frac{\\Delta_{0} - \\overline{H_{0}}}{\\sqrt{V_{H_{0}}}}\\] ,  \\(\\overline{H_{0}}\\) \\(V_{H_{0}}\\) mean   variance bootstrap null sample \\(H_{0}\\). corresponding degrees freedom estimated follows. \\[df = (k_{EC} - 1) + (k_{CS} - 1)\\]","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/diversity.evaluate.core.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Diversity Indices — diversity.evaluate.core","text":"Berger WH, Parker FL (1970). “Diversity planktonic foraminifera deep-sea sediments.” Science, 168(3937), 1345–1347. Gini C (1912). Variabilita e Mutabilita. Contributo allo Studio delle Distribuzioni e delle Relazioni Statistiche. [Fasc. .]. Tipogr. di P. Cuppini, Bologna. Gini C (1912). “Variabilita e mutabilita.” Pizetti E, Salvemini T (eds.), Memorie di Metodologica Statistica. Liberia Eredi Virgilio Veschi, Roma, Italy. Greenberg JH (1956). “measurement linguistic diversity.” Language, 32(1), 109. Hennink S, Zeven AC (1990). “interpretation Nei Shannon-Weaver within population variation indices.” Euphytica, 51(3), 235–240. Hill MO (1973). “Diversity evenness: unifying notation consequences.” Ecology, 54(2), 427–432. Hutcheson K (1970). “test comparing diversities based Shannon formula.” Journal Theoretical Biology, 29(1), 151–154. Lyons NI, Hutcheson K (1978). “C20. Comparing diversities: Gini's index.” Journal Statistical Computation Simulation, 8(1), 75–78. McIntosh RP (1967). “index diversity relation certain concepts diversity.” Ecology, 48(3), 392–404. Nei M (1973). “Analysis gene diversity subdivided populations.” Proceedings National Academy Sciences, 70(12), 3321–3323. Peet RK (1974). “measurement species diversity.” Annual Review Ecology Systematics, 5(1), 285–307. Shannon CE, Weaver W (1949). Mathematical Theory Communication,  number v. 2 Mathematical Theory Communication. University Illinois Press. Simpson EH (1949). “Measurement diversity.” Nature, 163(4148), 688–688. Solow AR (1993). “simple test change community structure.” Journal Animal Ecology, 62(1), 191. Williams CB (1964). Patterns Balance Nature Related Problems Quantitative Ecology. Academic Press.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/EvaluateCore/reference/diversity.evaluate.core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Diversity Indices — diversity.evaluate.core","text":"","code":"data(\"cassava_CC\") data(\"cassava_EC\")  ec <- cbind(genotypes = rownames(cassava_EC), cassava_EC) ec$genotypes <- as.character(ec$genotypes) rownames(ec) <- NULL  core <- rownames(cassava_CC)  quant <- c(\"NMSR\", \"TTRN\", \"TFWSR\", \"TTRW\", \"TFWSS\", \"TTSW\", \"TTPW\", \"AVPW\",            \"ARSR\", \"SRDM\") qual <- c(\"CUAL\", \"LNGS\", \"PTLC\", \"DSTA\", \"LFRT\", \"LBTEF\", \"CBTR\", \"NMLB\",           \"ANGB\", \"CUAL9M\", \"LVC9M\", \"TNPR9M\", \"PL9M\", \"STRP\", \"STRC\",           \"PSTR\")  ec[, qual] <- lapply(ec[, qual],                      function(x) factor(as.factor(x)))  # \\donttest{ diversity.evaluate.core(data = ec, names = \"genotypes\",                         qualitative = qual, selected = core) #> $simpson #>     Trait EC_No.Classes CS_No.Classes              EC_d              EC_D #> 1    CUAL             5             4 0.379231526565524 0.620768473434476 #> 2    LNGS             3             3 0.422400150078142 0.577599849921858 #> 3    PTLC             5             5 0.477398006104682 0.522601993895318 #> 4    DSTA             5             5 0.351400071089646 0.648599928910354 #> 5    LFRT             5             4 0.448935347916114 0.551064652083886 #> 6   LBTEF             6             6 0.223971174841036 0.776028825158964 #> 7    CBTR             3             3  0.51874284166756  0.48125715833244 #> 8    NMLB            10             9 0.206703725435988 0.793296274564012 #> 9    ANGB             4             4 0.350516387291879  0.64948361270812 #> 10 CUAL9M             5             5 0.309073521363567 0.690926478636433 #> 11  LVC9M             5             5 0.425299451029954 0.574700548970046 #> 12 TNPR9M             5             5 0.247165582455527 0.752834417544473 #> 13   PL9M             3             2 0.498635332682619 0.501364667317381 #> 14   STRP             4             4 0.322189843207836 0.677810156792164 #> 15   STRC             2             2 0.510325630074306 0.489674369925694 #> 16   PSTR             3             2 0.555306757465823 0.444693242534177 #>             EC_D.max         EC_D.inv          EC_D.rel               EC_d.V #> 1                0.8 2.63691156971154 0.775960591793095  6.2401326584027e-05 #> 2  0.666666666666667 2.36742340128195 0.866399774882787 2.66303075243519e-05 #> 3                0.8 2.09468826265002 0.653252492369147 6.43256463380354e-05 #> 4                0.8 2.84575924216273 0.810749911137942 4.49202770089222e-05 #> 5                0.8 2.22749223165839 0.688830815104857 3.64033438958825e-05 #> 6  0.833333333333333 4.46486026922774 0.931234590190757 1.01110395238633e-05 #> 7  0.666666666666667 1.92773744459853  0.72188573749866 4.63756492257553e-05 #> 8                0.9 4.83784217188518 0.881440305071124 1.57355754103247e-05 #> 9               0.75 2.85293366089411 0.865978150277494 3.10366375721298e-05 #> 10               0.8 3.23547612745411 0.863658098295541 1.34905804296262e-05 #> 11               0.8 2.35128448338761 0.718375686212558 4.98247003940663e-05 #> 12               0.8 4.04587074812462 0.941043021930592 2.56650302792209e-05 #> 13 0.666666666666667   2.005473608579 0.752047000976072 3.79031161219323e-06 #> 14              0.75 3.10376016215672 0.903746875722886 9.34647324671549e-06 #> 15               0.5  1.9595331707216 0.979348739851389 1.21791747807758e-05 #> 16 0.666666666666667 1.80080646697613 0.667039863801265  6.1357244865428e-05 #>             EC_d.boot.V              CS_d              CS_D          CS_D.max #> 1  6.68533450338314e-05 0.378472222222222 0.621527777777778              0.75 #> 2  2.65879113857189e-05 0.387755102040816 0.612244897959184 0.666666666666667 #> 3  6.50363094034534e-05 0.421343537414966 0.578656462585034               0.8 #> 4  4.79746735208086e-05 0.303500566893424 0.696499433106576               0.8 #> 5  3.49356184489191e-05 0.426587301587302 0.573412698412698              0.75 #> 6  9.78416887814862e-06 0.200538548752834 0.799461451247165 0.833333333333333 #> 7  4.76384743057889e-05 0.487244897959184 0.512755102040816 0.666666666666667 #> 8  1.55424381336112e-05 0.198058390022676 0.801941609977324 0.888888888888889 #> 9  3.19616815160651e-05 0.342120181405896 0.657879818594104              0.75 #> 10 1.35390135457135e-05 0.288052721088435 0.711947278911565               0.8 #> 11 4.73810044068571e-05 0.388676303854875 0.611323696145125               0.8 #> 12 2.63678232813366e-05   0.2218679138322   0.7781320861678               0.8 #> 13 3.95700024252201e-06 0.500283446712018 0.499716553287982               0.5 #> 14 9.00891406453171e-06 0.311862244897959 0.688137755102041              0.75 #> 15 1.11259330666434e-05 0.518140589569161 0.481859410430839               0.5 #> 16 5.79882678523648e-05 0.555555555555556 0.444444444444444               0.5 #>            CS_D.inv          CS_D.rel               CS_d.V          CS_d.boot.V #> 1  2.64220183486239 0.828703703703704 0.000664974207441761 0.000711409006695385 #> 2  2.57894736842105 0.918367346938775 0.000253494320337725 0.000240277035602111 #> 3  2.37336024217962 0.723320578231292  0.00106773305088108  0.00104909427501709 #> 4  3.29488676161569  0.87062429138322 0.000464316667250201   0.0004640806330644 #> 5  2.34418604651163 0.764550264550265 0.000434218289438062 0.000428639235160984 #> 6  4.98657243816254 0.959353741496599 6.05627470284696e-05 6.05634678928432e-05 #> 7  2.05235602094241 0.769132653061224 0.000257136051752956 0.000271330248841789 #> 8  5.04901610017889  0.90218431122449 0.000216132859442877 0.000204816497715932 #> 9  2.92294946147473 0.877173091458806 0.000360254817691854   0.0003537099748542 #> 10 3.47158671586716 0.889934098639456 0.000144703074224106 0.000152475008559194 #> 11 2.57283500455789 0.764154620181406 0.000503057233986995 0.000488621895795101 #> 12 4.50718620249122 0.972665107709751 0.000134121919501297 0.000143869065469617 #> 13 1.99886685552408 0.999433106575964 2.11737525161229e-05  1.4057939053243e-05 #> 14 3.20654396728016 0.917517006802721 8.69838142388246e-05 8.64975280349916e-05 #> 15 1.92997811816193 0.963718820861678  0.00022467592663519 0.000201749293623147 #> 16              1.8 0.888888888888889 0.000601970661850899 0.000601085481209453 #>    d.t.df             d.t.stat         d.t.pvalue d.t.significance d.boot.z.df #> 1       7     0.02815376878219  0.978325351754391               ns           7 #> 2       4     2.06997700767549   0.10723294813912               ns           4 #> 3       8     1.66600295615057  0.134274950280504               ns           8 #> 4       8     2.12261420536943 0.0665538249488766               ns           8 #> 5       7      1.0301574783912  0.337209790540494               ns           7 #> 6      10     2.78735177789005 0.0192068432217533                *          10 #> 7       4     1.80798358527422  0.144886591272101               ns           4 #> 8      17    0.567755084270463  0.577623407084813               ns          17 #> 9       6    0.424456215383704  0.686031514328123               ns           6 #> 10      8      1.6713011659847  0.133206249679844               ns           8 #> 11      8     1.55754090990284  0.157957033254601               ns           8 #> 12      8     2.00128917457502 0.0803555866511265               ns           8 #> 13      3   -0.329859967245677  0.763196306139146               ns           3 #> 14      6     1.05224751693921  0.333206278005286               ns           6 #> 15      2   -0.507791421657648  0.662061546648583               ns           2 #> 16      3 -0.00966012858117729   0.99289893656246               ns           3 #>          d.boot.z.stat    d.boot.z.pvalue d.boot.z.significance #> 1   0.0276014468259671   0.97875044140037                    ns #> 2     2.11134701701347   0.10233493680879                    ns #> 3     1.67600791343304  0.132263448642767                    ns #> 4     2.12071979935888 0.0667503673247065                    ns #> 5     1.03756609320658  0.333978621629479                    ns #> 6     2.77065034924187 0.0197652293840094                     * #> 7     1.76028327597653  0.153166166195353                    ns #> 8    0.577008613944405  0.571496330602201                    ns #> 9    0.425217529507766  0.685506175360378                    ns #> 10    1.63791870182241  0.140072980275729                    ns #> 11    1.58556233614025  0.151499007860614                    ns #> 12    1.93374355649653 0.0892037747747804                    ns #> 13    0.39244722767569   0.72094875991824                    ns #> 14    1.03972126692463  0.338541348748645                    ns #> 15    0.54146070930643   0.64244084391876                    ns #> 16 0.00959298293692684     0.992948292625                    ns #>  #> $shannon #>     Trait EC_No.Classes CS_No.Classes              EC_I          EC_I.max #> 1    CUAL             5             4  1.60118025300384   1.6094379124341 #> 2    LNGS             3             3  1.34638092645118  1.09861228866811 #> 3    PTLC             5             5  1.29757991678528   1.6094379124341 #> 4    DSTA             5             5  1.75217791456181   1.6094379124341 #> 5    LFRT             5             4  1.32020430332539   1.6094379124341 #> 6   LBTEF             6             6  2.26107917725546  1.79175946922805 #> 7    CBTR             3             3  1.04940762729587  1.09861228866811 #> 8    NMLB            10             9  2.46043656290491  2.30258509299405 #> 9    ANGB             4             4  1.63181278826841  1.38629436111989 #> 10 CUAL9M             5             5  1.81895733334165   1.6094379124341 #> 11  LVC9M             5             5  1.45781261313429   1.6094379124341 #> 12 TNPR9M             5             5  2.15936383275215   1.6094379124341 #> 13   PL9M             3             2  1.02393231699601  1.09861228866811 #> 14   STRP             4             4  1.70471635517281  1.38629436111989 #> 15   STRC             2             2 0.985051563686417 0.693147180559945 #> 16   PSTR             3             2 0.932902628052214  1.09861228866811 #>             EC_I.rel               EC_I.V          EC_I.boot.V #> 1  0.994869227718287 0.000495550546246209 0.000483808510194458 #> 2   1.22552873323805  0.00026683714279372 0.000269948802236365 #> 3  0.806231732681647  0.00076741293709653 0.000765752404583755 #> 4   1.08868934988106 0.000644551217715297 0.000699283275380162 #> 5     0.820289054412   0.0005480962422548 0.000517842713945963 #> 6   1.26193231630002 0.000259759685726472 0.000271033385039332 #> 7  0.955211987086096 0.000312696844542415 0.000303798121154971 #> 8   1.06855402234261 0.000496178249738945 0.000505626109031182 #> 9   1.17710410864701 0.000306008701151613  0.00030810953251426 #> 10  1.13018173567856 0.000397228605602063 0.000382025104334203 #> 11  0.90578990458197 0.000698631874341118 0.000665418478253527 #> 12  1.34168818571345 0.000264448274894998 0.000279879360986154 #> 13 0.932023360340673 0.000100041535943681 0.000101884272024935 #> 14  1.22969291586506  0.00021912035039574 0.000213652548557445 #> 15  1.42112900595031 2.53468656861686e-05 2.75676958917147e-05 #> 16 0.849164566676391 0.000206905486943159 0.000215549640442331 #>                 CS_I          CS_I.max          CS_I.rel               CS_I.V #> 1   1.60715392433211  1.38629436111989  1.15931649828959  0.00466900952090494 #> 2   1.44881563572518  1.09861228866811  1.31876882378736  0.00183098114336171 #> 3   1.60685189446012   1.6094379124341 0.998393216691366  0.00915269666156106 #> 4   1.94652505102181   1.6094379124341  1.20944401519528  0.00501290672204481 #> 5   1.39390699808299  1.38629436111989  1.00549135679738  0.00481441616742965 #> 6    2.3831722498942  1.79175946922805    1.330073757568  0.00172264312694065 #> 7   1.12338192727968  1.09861228866811  1.02254629669362  0.00290287113955504 #> 8   2.56080478714959  2.19722457733622  1.16547248449867  0.00546163553548553 #> 9   1.69700114892879  1.38629436111989  1.22412757097122  0.00354899161566695 #> 10  1.92688046691671   1.6094379124341  1.19723814881589  0.00380714696318465 #> 11  1.59702066650884   1.6094379124341 0.992284731315619  0.00676974620846264 #> 12  2.24730159981114   1.6094379124341  1.39632699245436  0.00129552549169971 #> 13 0.999591034189098 0.693147180559945  1.44210502794168 7.02197242512667e-06 #> 14  1.74920954558179  1.38629436111989  1.26178796844324   0.0020863467552808 #> 15  0.97366806454962 0.693147180559945  1.40470608819769 0.000443961107972778 #> 16  0.91829583405449 0.693147180559945  1.32482084585941  0.00132275132275134 #>             CS_I.boot.V           I.t.stat           I.t.df          I.t.pvalue #> 1    0.0047929123394758 -0.083123660050637 205.323489838581   0.933834195011031 #> 2   0.00187875640207067  -2.23647066374941 220.068588438007  0.0263241034578903 #> 3   0.00931911218476163  -3.10514822627186 197.214845421711 0.00218182272218803 #> 4   0.00517797969455639  -2.58385107753543 213.627424864319  0.0104369229742795 #> 5   0.00488761731418891  -1.00646624014807  208.16009186019   0.315359849464886 #> 6   0.00187862560896072  -2.74217439229004 221.982338302534 0.00660128212793374 #> 7   0.00298070544341396  -1.30452382793487  205.90491319267   0.193511253079244 #> 8   0.00547694938695042   -1.3003275918761 199.746997945695   0.194987041994507 #> 9   0.00362924040839815  -1.04992396937323 198.073409342984   0.295032389672131 #> 10  0.00434669657011922  -1.66442333074281 204.664065671499   0.097558069731458 #> 11  0.00669021208688097  -1.61083557606938 204.247107694347   0.108759859193219 #> 12   0.0013166833981556  -2.22646968440541 242.577447747539  0.0269016983557465 #> 13 4.24533303750304e-05   2.35246259571922 1837.93308927511  0.0187545059227561 #> 14  0.00212088460832853 -0.926646485957522 204.916304701679     0.3552001943646 #> 15 0.000438689236849775   0.52546865211132 187.669671190779   0.599877733009115 #> 16  0.00146139768748281  0.373471875118422 224.120762900574   0.709150296735105 #>    I.t.significance I.boot.z.df      I.boot.z.stat    I.boot.z.pvalue #> 1                ns           7 0.0817336348245371  0.937146464242981 #> 2                 *           4    2.2064267784542 0.0919914613051522 #> 3                **           8   3.08665470359158 0.0149652109934245 #> 4                 *           8   2.57117798516249 0.0330669187074517 #> 5                ns           7   1.01631020857175  0.343315003404297 #> 6                **          10   2.66359626201418 0.0237522092011334 #> 7                ns           4   1.28540612042092  0.268024804385408 #> 8                ns          17    1.2958056339159  0.212360842372221 #> 9                ns           6   1.04598381571325  0.335865437056982 #> 10               ns           8    1.5855588008592  0.151499807281787 #> 11               ns           8   1.60319190075875  0.147559909191939 #> 12                *           8   2.20200971458306 0.0588093099330856 #> 13                *           3   1.98106680901202  0.141910185247116 #> 14               ns           6  0.935780231278676  0.385503284430038 #> 15               ns           2  0.532654452382285  0.647528455859605 #> 16               ns           3  0.355800409404779  0.745538558892587 #>    I.boot.z.significance #> 1                     ns #> 2                     ns #> 3                      * #> 4                      * #> 5                     ns #> 6                      * #> 7                     ns #> 8                     ns #> 9                     ns #> 10                    ns #> 11                    ns #> 12                    ns #> 13                    ns #> 14                    ns #> 15                    ns #> 16                    ns #>  #> $mcintosh #>     Trait EC_No.Classes CS_No.Classes           EC_D.Mc           CS_D.Mc #> 1    CUAL             5             4 0.393778012434178 0.416968887221027 #> 2    LNGS             3             3 0.358820738546382  0.40884307929476 #> 3    PTLC             5             5 0.316779500161785 0.380225207834671 #> 4    DSTA             5             5 0.417380876241608 0.486635921075666 #> 5    LFRT             5             4 0.338215427137732 0.375861861492538 #> 6   LBTEF             6             6 0.539900644138108 0.598348264293068 #> 7    CBTR             3             3 0.286749615427161 0.327215963767637 #> 8    NMLB            10             9 0.558974562677424 0.601358283540837 #> 9    ANGB             4             4 0.418145333938704 0.449791785009108 #> 10 CUAL9M             5             5 0.455147453452433 0.502026774187731 #> 11  LVC9M             5             5 0.356538441668976 0.408042032313971 #> 12 TNPR9M             5             5 0.515402077468806 0.573194332783244 #> 13   PL9M             3             2 0.301198604544138 0.317162433070916 #> 14   STRP             4             4 0.443181993303366 0.478468357680793 #> 15   STRC             2             2 0.292763414762376 0.303603702882552 #> 16   PSTR             3             2 0.261175379595452 0.275932675604997 #>        M.boot.z.stat M.boot.z.df      M.boot.z.pvalue M.boot.z.significance #> 1   1.00391168633292           7    0.348854575801086                    ns #> 2   3.39520672163674           4   0.0273980949692247                     * #> 3   2.28323260882762           8    0.051809250272037                    ns #> 4    3.3110316235721           8   0.0106817822611812                     * #> 5   2.15395666678097           7   0.0682139277106039                    ns #> 6   5.96821850593738          10 0.000137837562706689                    ** #> 7   2.99754729409007           4   0.0400387096312927                     * #> 8   2.42994156651831          17   0.0264706618143546                     * #> 9   1.80568141934553           6     0.12099659678039                    ns #> 10   3.8867793107122           8  0.00463023359089327                    ** #> 11  2.53855378664644           8   0.0347890152183959                     * #> 12  4.24645671583821           8  0.00281266593084537                    ** #> 13  4.42355476586344           3   0.0214543888693413                     * #> 14  3.81879071089912           6  0.00877307594548063                    ** #> 15 0.913484492624288           2    0.457416629856141                    ns #> 16   0.8043452846734           3    0.480033356696624                    ns #>  # }"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/freqdist.evaluate.core.html","id":null,"dir":"Reference","previous_headings":"","what":"Frequency Distribution Histogram — freqdist.evaluate.core","title":"Frequency Distribution Histogram — freqdist.evaluate.core","text":"Plot stacked frequency distribution histogram graphically compare probability distributions traits entire collection (EC) core set (CS).","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/freqdist.evaluate.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Frequency Distribution Histogram — freqdist.evaluate.core","text":"","code":"freqdist.evaluate.core(   data,   names,   quantitative,   qualitative,   selected,   highlight = NULL,   include.highlight = TRUE,   highlight.se = NULL,   highlight.col = \"red\" )"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/freqdist.evaluate.core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Frequency Distribution Histogram — freqdist.evaluate.core","text":"data data data frame object. data frame possess one row per individual columns individual names multiple trait/character data. names Name column individual names character string. quantitative Name columns quantitative traits character vector. qualitative Name columns qualitative traits character vector. selected Character vector names individuals selected core collection present names column. highlight Individual names highlighted character vector. include.highlight TRUE, highlighted individuals included frequency distribution histogram. Default TRUE. highlight.se Optional data frame standard errors individuals specified highlight. column names data. highlight.col colour(s) used highlighting individuals plot character vector length highlight. Must valid colour values R (named colours, hexadecimal representation, index colours [1:8] default R palette() etc.).","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/freqdist.evaluate.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Frequency Distribution Histogram — freqdist.evaluate.core","text":"list ggplot objects stacked frequency   distribution histograms plots trait specified   quantitative qualitative.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/EvaluateCore/reference/freqdist.evaluate.core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Frequency Distribution Histogram — freqdist.evaluate.core","text":"","code":"data(\"cassava_CC\") data(\"cassava_EC\")  ec <- cbind(genotypes = rownames(cassava_EC), cassava_EC) ec$genotypes <- as.character(ec$genotypes) rownames(ec) <- NULL  core <- rownames(cassava_CC)  quant <- c(\"NMSR\", \"TTRN\", \"TFWSR\", \"TTRW\", \"TFWSS\", \"TTSW\", \"TTPW\", \"AVPW\",            \"ARSR\", \"SRDM\") qual <- c(\"CUAL\", \"LNGS\", \"PTLC\", \"DSTA\", \"LFRT\", \"LBTEF\", \"CBTR\", \"NMLB\",           \"ANGB\", \"CUAL9M\", \"LVC9M\", \"TNPR9M\", \"PL9M\", \"STRP\", \"STRC\",           \"PSTR\")  ec[, qual] <- lapply(ec[, qual],                      function(x) factor(as.factor(x)))  # \\donttest{ freqdist.evaluate.core(data = ec, names = \"genotypes\",                        quantitative = quant, qualitative = qual,                        selected = core) #> $NMSR  #>  #> $TTRN  #>  #> $TFWSR  #>  #> $TTRW  #>  #> $TFWSS  #>  #> $TTSW  #>  #> $TTPW  #>  #> $AVPW  #>  #> $ARSR  #>  #> $SRDM  #>  #> $CUAL  #>  #> $LNGS  #>  #> $PTLC  #>  #> $DSTA  #>  #> $LFRT  #>  #> $LBTEF  #>  #> $CBTR  #>  #> $NMLB  #>  #> $ANGB  #>  #> $CUAL9M  #>  #> $LVC9M  #>  #> $TNPR9M  #>  #> $PL9M  #>  #> $STRP  #>  #> $STRC  #>  #> $PSTR  #>   checks <- c(\"TMe-1199\", \"TMe-1957\", \"TMe-3596\", \"TMe-3392\")  freqdist.evaluate.core(data = ec, names = \"genotypes\",                        quantitative = quant, qualitative = qual,                        selected = core,                        highlight = checks, highlight.col = \"red\")                           #> $NMSR #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $TTRN #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $TFWSR #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $TTRW #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $TFWSS #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $TTSW #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $TTPW #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $AVPW #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $ARSR #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $SRDM #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $CUAL #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $LNGS #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $PTLC #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $DSTA #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $LFRT #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $LBTEF #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $CBTR #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $NMLB #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $ANGB #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $CUAL9M #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $LVC9M #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $TNPR9M #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $PL9M #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $STRP #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $STRC #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $PSTR #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>   quant.se <- data.frame(genotypes = checks,                        NMSR = c(0.107, 0.099, 0.106, 0.062),                        TTRN = c(0.081, 0.072, 0.057, 0.049),                        TFWSR = c(0.089, 0.031, 0.092, 0.097),                        TTRW = c(0.064, 0.031, 0.071, 0.071),                        TFWSS = c(0.106, 0.071, 0.121, 0.066),                        TTSW = c(0.084, 0.045, 0.066, 0.054),                        TTPW = c(0.098, 0.052, 0.111, 0.082),                        AVPW = c(0.074, 0.038, 0.054, 0.061),                        ARSR = c(0.104, 0.019, 0.204, 0.044),                        SRDM = c(0.078, 0.138, 0.076, 0.079))  freqdist.evaluate.core(data = ec, names = \"genotypes\",                        quantitative = quant,                        selected = core,                        highlight = checks, highlight.col = \"red\",                        highlight.se = quant.se)           #> $NMSR #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $TTRN #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $TFWSR #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $TTRW #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $TFWSS #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $TTSW #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $TTPW #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $AVPW #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $ARSR #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  #> $SRDM #> TableGrob (1 x 2) \"arrange\": 2 grobs #>   z     cells    name              grob #> 1 1 (1-1,1-1) arrange    gtable[layout] #> 2 2 (1-1,2-2) arrange gtable[guide-box] #>  # }"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/iqr.evaluate.core.html","id":null,"dir":"Reference","previous_headings":"","what":"Interquartile Range — iqr.evaluate.core","title":"Interquartile Range — iqr.evaluate.core","text":"Compute Interquartile Range (IQR) (Upton Cook 1996)  compare quantitative traits entire collection (EC) core set (CS).","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/iqr.evaluate.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interquartile Range — iqr.evaluate.core","text":"","code":"iqr.evaluate.core(data, names, quantitative, selected)"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/iqr.evaluate.core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interquartile Range — iqr.evaluate.core","text":"data data data frame object. data frame possess one row per individual columns individual names multiple trait/character data. names Name column individual names character string. quantitative Name columns quantitative traits character vector. selected Character vector names individuals selected core collection present names column.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/iqr.evaluate.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interquartile Range — iqr.evaluate.core","text":"data frame IQR values EC CS traits   specified quantitative.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/iqr.evaluate.core.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Interquartile Range — iqr.evaluate.core","text":"Upton G, Cook (1996). “General summary statistics.” Understanding statistics. Oxford University Press.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/EvaluateCore/reference/iqr.evaluate.core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interquartile Range — iqr.evaluate.core","text":"","code":"data(\"cassava_CC\") data(\"cassava_EC\")  ec <- cbind(genotypes = rownames(cassava_EC), cassava_EC) ec$genotypes <- as.character(ec$genotypes) rownames(ec) <- NULL  core <- rownames(cassava_CC)  quant <- c(\"NMSR\", \"TTRN\", \"TFWSR\", \"TTRW\", \"TFWSS\", \"TTSW\", \"TTPW\", \"AVPW\",            \"ARSR\", \"SRDM\") qual <- c(\"CUAL\", \"LNGS\", \"PTLC\", \"DSTA\", \"LFRT\", \"LBTEF\", \"CBTR\", \"NMLB\",           \"ANGB\", \"CUAL9M\", \"LVC9M\", \"TNPR9M\", \"PL9M\", \"STRP\", \"STRC\",           \"PSTR\")  ec[, qual] <- lapply(ec[, qual],                      function(x) factor(as.factor(x)))  iqr.evaluate.core(data = ec, names = \"genotypes\",                   quantitative = quant, selected = core) #>    Trait    EC_IQR    CS_IQR #> 1   NMSR 10.000000  9.250000 #> 2   TTRN  2.500000  2.666667 #> 3  TFWSR  4.800000  5.550000 #> 4   TTRW  1.500000  2.266667 #> 5  TFWSS  7.400000  8.300000 #> 6   TTSW  2.200000  2.837500 #> 7   TTPW 11.250000 13.650000 #> 8   AVPW  3.470833  5.110000 #> 9   ARSR  3.000000  3.000000 #> 10  SRDM  6.000000  4.625000"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/levene.evaluate.core.html","id":null,"dir":"Reference","previous_headings":"","what":"Levene's Test — levene.evaluate.core","title":"Levene's Test — levene.evaluate.core","text":"Test  variances entire collection (EC) core set (CS) quantitative traits Levene's test (Levene 1960) .","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/levene.evaluate.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Levene's Test — levene.evaluate.core","text":"","code":"levene.evaluate.core(data, names, quantitative, selected)"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/levene.evaluate.core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Levene's Test — levene.evaluate.core","text":"data data data frame object. data frame possess one row per individual columns individual names multiple trait/character data. names Name column individual names character string. quantitative Name columns quantitative traits character vector. selected Character vector names individuals selected core collection present names column.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/levene.evaluate.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Levene's Test — levene.evaluate.core","text":"data frame following columns Trait quantitative   trait. EC_V variance EC. CS_V variance   CS. EC_CV coefficient variance EC. CS_CV coefficient variance CS. Levene_Fvalue test statistic. Levene_pvalue p value   test statistic. Levene_significance significance   test statistic (*: p \\(\\leq\\) 0.01; **: p \\(\\leq\\) 0.05; ns: p   \\( > \\) 0.05).","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/levene.evaluate.core.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Levene's Test — levene.evaluate.core","text":"Levene H (1960). “Robust tests equality variances.” Olkin , Ghurye SG, Hoeffding W, Madow WG, Mann HB (eds.), Contribution Probability Statistics: Essays Honor Harold Hotelling, 278–292. Stanford University Press, Palo Alto, CA.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/EvaluateCore/reference/levene.evaluate.core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Levene's Test — levene.evaluate.core","text":"","code":"data(\"cassava_CC\") data(\"cassava_EC\")  ec <- cbind(genotypes = rownames(cassava_EC), cassava_EC) ec$genotypes <- as.character(ec$genotypes) rownames(ec) <- NULL  core <- rownames(cassava_CC)  quant <- c(\"NMSR\", \"TTRN\", \"TFWSR\", \"TTRW\", \"TFWSS\", \"TTSW\", \"TTPW\", \"AVPW\",            \"ARSR\", \"SRDM\") qual <- c(\"CUAL\", \"LNGS\", \"PTLC\", \"DSTA\", \"LFRT\", \"LBTEF\", \"CBTR\", \"NMLB\",           \"ANGB\", \"CUAL9M\", \"LVC9M\", \"TNPR9M\", \"PL9M\", \"STRP\", \"STRC\",           \"PSTR\")  ec[, qual] <- lapply(ec[, qual],                      function(x) factor(as.factor(x)))  levene.evaluate.core(data = ec, names = \"genotypes\",                      quantitative = quant, selected = core) #>    Trait      EC_V       CS_V     EC_CV     CS_CV Levene_Fvalue Levene_pvalue #> 1   NMSR 59.087307  66.982464 0.6557556 0.7513439    0.08138887  7.754559e-01 #> 2   TTRN  3.650995   5.168937 0.4957973 0.5784099    4.48085067  3.440983e-02 #> 3  TFWSR 20.545565  37.050176 0.8349124 0.9588343    9.73620667  1.834623e-03 #> 4   TTRW  2.745559   8.185938 0.8730338 1.0929363   32.17078669  1.635197e-08 #> 5  TFWSS 34.723261  52.465146 0.8487110 0.9348325    5.47834742  1.935920e-02 #> 6   TTSW  4.008444   9.527677 0.8385793 1.0057366   20.99595381  4.910026e-06 #> 7   TTPW 95.800602 158.740945 0.7911214 0.8937898    8.23203952  4.162436e-03 #> 8   AVPW 11.312159  29.789173 0.7848312 0.9597393   32.84901670  1.160456e-08 #> 9   ARSR  5.082044   3.862988 1.2132652 1.1545293    0.37336766  5.412494e-01 #> 10  SRDM 25.329950  18.184402 0.1332473 0.1130209    5.02652477  2.508002e-02 #>    Levene_significance #> 1                   ns #> 2                    * #> 3                   ** #> 4                   ** #> 5                    * #> 6                   ** #> 7                   ** #> 8                   ** #> 9                   ns #> 10                   *"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/pca.evaluate.core.html","id":null,"dir":"Reference","previous_headings":"","what":"Principal Component Analysis — pca.evaluate.core","title":"Principal Component Analysis — pca.evaluate.core","text":"Compute Principal Component Analysis Statistics (Mardia et al. 1979)  compare probability distributions quantitative traits entire collection (EC) core set (CS).","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/pca.evaluate.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Principal Component Analysis — pca.evaluate.core","text":"","code":"pca.evaluate.core(   data,   names,   quantitative,   selected,   center = TRUE,   scale = TRUE,   npc.plot = 6 )"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/pca.evaluate.core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Principal Component Analysis — pca.evaluate.core","text":"data data data frame object. data frame possess one row per individual columns individual names multiple trait/character data. names Name column individual names character string. quantitative Name columns quantitative traits character vector. selected Character vector names individuals selected core collection present names column. center either logical value numeric-alike vector length     equal number columns x,     ‘numeric-alike’ means .numeric(.)     applied successfully .numeric(.) true. scale either logical value numeric-alike vector length     equal number columns x. npc.plot number principal components eigen values plotted. default value 6.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/pca.evaluate.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Principal Component Analysis — pca.evaluate.core","text":"list following components. EC PC Importance data   frame importance principal components EC EC PC Loadings   data frame eigen vectors principal components EC CS PC   Importance data frame importance principal components CS CS PC Loadings data frame eigen vectors principal   components CS Scree Plot scree plot principal components   EC CS ggplot object. PC Loadings Plot plot   eigen vector values principal components EC CS specified   npc.plot ggplot2 object.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/pca.evaluate.core.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Principal Component Analysis — pca.evaluate.core","text":"Mardia KV, Kent JT, Bibby JM (1979). Multivariate analysis. Academic Press, London; New York. ISBN 0-12-471250-9 978-0-12-471250-8 0-12-471252-5 978-0-12-471252-2.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/EvaluateCore/reference/pca.evaluate.core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Principal Component Analysis — pca.evaluate.core","text":"","code":"data(\"cassava_CC\") data(\"cassava_EC\")  ec <- cbind(genotypes = rownames(cassava_EC), cassava_EC) ec$genotypes <- as.character(ec$genotypes) rownames(ec) <- NULL  core <- rownames(cassava_CC)  quant <- c(\"NMSR\", \"TTRN\", \"TFWSR\", \"TTRW\", \"TFWSS\", \"TTSW\", \"TTPW\", \"AVPW\",            \"ARSR\", \"SRDM\") qual <- c(\"CUAL\", \"LNGS\", \"PTLC\", \"DSTA\", \"LFRT\", \"LBTEF\", \"CBTR\", \"NMLB\",           \"ANGB\", \"CUAL9M\", \"LVC9M\", \"TNPR9M\", \"PL9M\", \"STRP\", \"STRC\",           \"PSTR\")  ec[, qual] <- lapply(ec[, qual],                      function(x) factor(as.factor(x)))  pca.evaluate.core(data = ec, names = \"genotypes\",                   quantitative = quant, selected = core,                   center = TRUE, scale = TRUE, npc.plot = 4) #> $`EC PC Importance` #>                             PC1      PC2      PC3       PC4       PC5       PC6 #> Standard deviation     2.303455 1.237223 0.996322 0.9455592 0.8817511 0.6251589 #> Proportion of Variance 0.530590 0.153070 0.099270 0.0894100 0.0777500 0.0390800 #> Cumulative Proportion  0.530590 0.683660 0.782930 0.8723400 0.9500900 0.9891700 #>                             PC7       PC8          PC9         PC10 #> Standard deviation     0.271212 0.1864651 4.033635e-15 1.338255e-15 #> Proportion of Variance 0.007360 0.0034800 0.000000e+00 0.000000e+00 #> Cumulative Proportion  0.996520 1.0000000 1.000000e+00 1.000000e+00 #>  #> $`EC PC Loadings` #>                PC1         PC2         PC3        PC4          PC5         PC6 #> NMSR   0.276022186  0.55062492  0.01668655 -0.1871023  0.248244608 -0.21686806 #> TTRN   0.293942565  0.20622412  0.17262243  0.3680853  0.581178024 -0.33878178 #> TFWSR  0.371192088  0.06599302 -0.07379106 -0.1852754 -0.463167012 -0.33058227 #> TTRW   0.334894681 -0.33211659  0.03783194  0.3153475 -0.297171591 -0.40373685 #> TFWSS  0.385024604  0.13341651 -0.08631304 -0.3426523  0.050559491  0.39246657 #> TTSW   0.362255093 -0.27969168  0.02022637  0.1585548  0.250560331  0.51748203 #> TTPW   0.403699747  0.11088360 -0.08613665 -0.2920918 -0.184053823  0.08318831 #> AVPW   0.380627616 -0.33011132  0.03067827  0.2497406  0.002748448  0.10913947 #> ARSR   0.011265368  0.52673026  0.37858111  0.5081543 -0.444763915  0.34913640 #> SRDM  -0.004586239  0.21186429 -0.89638345  0.3837654 -0.027148446  0.05797814 #>               PC7          PC8           PC9          PC10 #> NMSR   0.66616815  0.181386616 -1.645650e-15  7.445343e-16 #> TTRN  -0.49417918 -0.095026370  3.536674e-16 -1.428385e-15 #> TFWSR -0.32960316  0.499641762 -3.419350e-01 -1.381350e-01 #> TTRW   0.31608453 -0.416500300 -1.460210e-01  3.614559e-01 #> TFWSS -0.10285083 -0.558642359 -4.445235e-01 -1.795787e-01 #> TTSW   0.07640644  0.454657280 -1.764363e-01  4.367448e-01 #> TTPW  -0.21455970 -0.104941479  7.383608e-01  2.982832e-01 #> AVPW   0.20120313  0.065453705  2.963963e-01 -7.336900e-01 #> ARSR  -0.01979215 -0.027945977 -1.084265e-16  5.583470e-18 #> SRDM  -0.01152032 -0.009060183 -1.189926e-16 -1.143250e-16 #>  #> $`CS PC Importance` #>                             PC1      PC2      PC3       PC4       PC5       PC6 #> Standard deviation     2.280951 1.312257 1.000457 0.8959377 0.8451336 0.6538375 #> Proportion of Variance 0.520270 0.172200 0.100090 0.0802700 0.0714300 0.0427500 #> Cumulative Proportion  0.520270 0.692480 0.792570 0.8728400 0.9442600 0.9870100 #>                              PC7       PC8          PC9         PC10 #> Standard deviation     0.3207286 0.1643265 1.032366e-15 3.669511e-16 #> Proportion of Variance 0.0102900 0.0027000 0.000000e+00 0.000000e+00 #> Cumulative Proportion  0.9973000 1.0000000 1.000000e+00 1.000000e+00 #>  #> $`CS PC Loadings` #>               PC1         PC2          PC3         PC4         PC5          PC6 #> NMSR   0.23686459  0.57588211 -0.118000407  0.18406534  0.22404134 -0.154356246 #> TTRN   0.27243380  0.28489364 -0.238654425 -0.39636509  0.59296937 -0.185643439 #> TFWSR  0.38732336  0.05088131  0.173676592  0.15588284 -0.33283776 -0.410239780 #> TTRW   0.34195710 -0.29955595  0.132403764 -0.37824392 -0.14609160 -0.425032356 #> TFWSS  0.38798499  0.11032791  0.002061297  0.40943370 -0.02293943  0.339541418 #> TTSW   0.36275510 -0.26716740 -0.043442847 -0.11254725  0.18634678  0.589974192 #> TTPW   0.41017366  0.08800885  0.085090829  0.31069206 -0.17398680 -0.002991297 #> AVPW   0.38441017 -0.30812430  0.044838607 -0.26192922  0.02880417  0.110848682 #> ARSR   0.02642625  0.53641424  0.049592980 -0.54225171 -0.54787309  0.334180984 #> SRDM  -0.06233279  0.14455341  0.931570561 -0.04658879  0.31551819  0.073690249 #>               PC7          PC8           PC9          PC10 #> NMSR   0.69455927  0.089542525 -5.893990e-16  2.361951e-17 #> TTRN  -0.49373454 -0.026538022  7.853091e-16 -3.234060e-16 #> TFWSR -0.24125034  0.553541017  3.409506e-02  3.848106e-01 #> TTRW   0.26321979 -0.434887362 -4.135011e-01  3.663710e-02 #> TFWSS -0.17717813 -0.557775840  4.057250e-02  4.579176e-01 #> TTSW   0.13648832  0.424831173 -4.461038e-01  3.952578e-02 #> TTPW  -0.21841109 -0.053240284 -7.057336e-02 -7.965194e-01 #> AVPW   0.21517212  0.012287406  7.888086e-01 -6.989017e-02 #> ARSR  -0.04644065 -0.032656495  2.874973e-17 -6.847934e-17 #> SRDM  -0.01212024 -0.009789162  5.367396e-17  1.281538e-18 #>  #> $`Scree Plot`  #>  #> $`PC Loadings Plot`  #>"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/pdfdist.evaluate.core.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance Between Probability Distributions — pdfdist.evaluate.core","title":"Distance Between Probability Distributions — pdfdist.evaluate.core","text":"Compute Kullback-Leibler (Kullback Leibler 1951) , Kolmogorov-Smirnov (Kolmogorov 1933; Smirnov 1948)  Anderson-Darling distances (Anderson Darling 1952)  probability distributions collection (EC) core set (CS) quantitative traits.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/pdfdist.evaluate.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance Between Probability Distributions — pdfdist.evaluate.core","text":"","code":"pdfdist.evaluate.core(data, names, quantitative, selected)"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/pdfdist.evaluate.core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance Between Probability Distributions — pdfdist.evaluate.core","text":"data data data frame object. data frame possess one row per individual columns individual names multiple trait/character data. names Name column individual names character string. quantitative Name columns quantitative traits character vector. selected Character vector names individuals selected core collection present names column.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/pdfdist.evaluate.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance Between Probability Distributions — pdfdist.evaluate.core","text":"data frame following columns. Trait   quantitative trait. KL_Distance Kullback-Leibler distance   (Kullback Leibler 1951)  EC CS. KS_Distance Kolmogorov-Smirnov distance   (Kolmogorov 1933; Smirnov 1948)    EC CS. KS_pvalue p value Kolmogorov-Smirnov   distance. AD_Distance Anderson-Darling distance   (Anderson Darling 1952)  EC CS. AD_pvalue p value Anderson-Darling distance. KS_significance significance Kolmogorov-Smirnov distance   (*: p \\(\\leq\\) 0.01; **: p \\(\\leq\\) 0.05; ns: p \\(>\\)   0.05). AD_pvalue significance Anderson-Darling distance   (*: p \\(\\leq\\) 0.01; **: p \\(\\leq\\) 0.05; ns: p \\(>\\)   0.05).","code":""},{"path":[]},{"path":"https://aravind-j.github.io/EvaluateCore/reference/pdfdist.evaluate.core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance Between Probability Distributions — pdfdist.evaluate.core","text":"","code":"data(\"cassava_CC\") data(\"cassava_EC\")  ec <- cbind(genotypes = rownames(cassava_EC), cassava_EC) ec$genotypes <- as.character(ec$genotypes) rownames(ec) <- NULL  core <- rownames(cassava_CC)  quant <- c(\"NMSR\", \"TTRN\", \"TFWSR\", \"TTRW\", \"TFWSS\", \"TTSW\", \"TTPW\", \"AVPW\",            \"ARSR\", \"SRDM\") qual <- c(\"CUAL\", \"LNGS\", \"PTLC\", \"DSTA\", \"LFRT\", \"LBTEF\", \"CBTR\", \"NMLB\",           \"ANGB\", \"CUAL9M\", \"LVC9M\", \"TNPR9M\", \"PL9M\", \"STRP\", \"STRC\",           \"PSTR\")  ec[, qual] <- lapply(ec[, qual],                      function(x) factor(as.factor(x)))  pdfdist.evaluate.core(data = ec, names = \"genotypes\",                       quantitative = quant, selected = core) #> Warning: p-value will be approximate in the presence of ties #> Warning: p-value will be approximate in the presence of ties #> Warning: p-value will be approximate in the presence of ties #> Warning: p-value will be approximate in the presence of ties #> Warning: p-value will be approximate in the presence of ties #> Warning: p-value will be approximate in the presence of ties #> Warning: p-value will be approximate in the presence of ties #> Warning: p-value will be approximate in the presence of ties #> Warning: p-value will be approximate in the presence of ties #> Warning: p-value will be approximate in the presence of ties #>    Trait KL_Distance KS_Distance   KS_pvalue AD_Distance AD_pvalue #> 1   NMSR  0.10939457  0.07641952 0.334275339     1.92900 0.1005100 #> 2   TTRN  0.02893963  0.05164857 0.809802831     0.91063 0.4073400 #> 3  TFWSR  0.11522926  0.07531671 0.351528548     1.63440 0.1472800 #> 4   TTRW  0.08052342  0.12781360 0.013596639     5.21680 0.0022362 #> 5  TFWSS  0.07080701  0.07183859 0.409657631     1.15520 0.2849500 #> 6   TTSW  0.09799896  0.11025337 0.048766338     3.77650 0.0112240 #> 7   TTPW  0.06132788  0.07479358 0.359913871     1.61630 0.1508700 #> 8   AVPW  0.06382748  0.13355390 0.008597246     5.57120 0.0015109 #> 9   ARSR  0.21960728  0.03422973 0.993985523     0.50026 0.7458100 #> 10  SRDM  0.23403978  0.08135392 0.264146682     1.65170 0.1439400 #>    KS_significance AD_significance #> 1               ns              ns #> 2               ns              ns #> 3               ns              ns #> 4                *              ** #> 5               ns              ns #> 6                *               * #> 7               ns              ns #> 8               **              ** #> 9               ns              ns #> 10              ns              ns"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/percentdiff.evaluate.core.html","id":null,"dir":"Reference","previous_headings":"","what":"Percentage Difference of Means and Variances — percentdiff.evaluate.core","title":"Percentage Difference of Means and Variances — percentdiff.evaluate.core","text":"Compute following differences entire collection (EC) core set (CS). Percentage significant differences mean (\\(MD\\%_{Hu}\\)) (Hu et al. 2000) Percentage significant differences variance (\\(VD\\%_{Hu}\\)) (Hu et al. 2000) Average absolute differences means (\\(MD\\%_{Kim}\\)) (Kim et al. 2007) Average absolute differences variances (\\(VD\\%_{Kim}\\)) (Kim et al. 2007) Percentage difference mean squared Euclidean distance among accessions (\\(\\overline{d}D\\%\\)) (Studnicki et al. 2013) Percentage range ratios smaller 0.70 (\\(S_{RR_{0.7}}\\)) (Diwan et al. 1995)","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/percentdiff.evaluate.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Percentage Difference of Means and Variances — percentdiff.evaluate.core","text":"","code":"percentdiff.evaluate.core(   data,   names,   quantitative,   selected,   alpha = 0.05,   rr.crit = 0.7 )"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/percentdiff.evaluate.core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Percentage Difference of Means and Variances — percentdiff.evaluate.core","text":"data data data frame object. data frame possess one row per individual columns individual names multiple trait/character data. names Name column individual names character string. quantitative Name columns quantitative traits character vector. selected Character vector names individuals selected core collection present names column. alpha Type error probability (Significance level) difference. rr.crit critical value range ratio considered acceptable representative CS. default value 0.7.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/percentdiff.evaluate.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Percentage Difference of Means and Variances — percentdiff.evaluate.core","text":"data frame values   \\(MD\\%_{Hu}\\),   \\(VD\\%_{Hu}\\),   \\(MD\\%_{Kim}\\),   \\(VD\\%_{Kim}\\)   \\(\\overline{d}D\\%\\).","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/percentdiff.evaluate.core.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Percentage Difference of Means and Variances — percentdiff.evaluate.core","text":"differences computed follows. \\[MD\\%_{Hu} = \\left ( \\frac{S_{t}}{n} \\right ) \\times 100\\] , \\(S_{t}\\) number traits significant difference means EC CS \\(n\\) total number traits. representative core \\(MD\\%_{Hu}\\) < 20 % \\(CR\\) > 80 % (Hu et al. 2000) . \\[VD\\%_{Hu} = \\left ( \\frac{S_{F}}{n} \\right ) \\times 100\\] , \\(S_{F}\\) number traits significant difference variances EC CS \\(n\\) total number traits. Larger \\(VD\\%_{Hu}\\) value indicates diverse core set. \\[MD\\%_{Kim} = \\left ( \\frac{1}{n}\\sum_{=1}^{n} \\frac{\\left | M_{EC_{}}-M_{CS_{}} \\right |}{M_{CS_{}}} \\right ) \\times 100\\] , \\(M_{EC_{}}\\) mean EC \\(\\)th trait, \\(M_{CS_{}}\\) mean CS \\(\\)th trait \\(n\\) total number traits. \\[VD\\%_{Kim} = \\left ( \\frac{1}{n}\\sum_{=1}^{n} \\frac{\\left | V_{EC_{}}-V_{CS_{}} \\right |}{V_{CS_{}}} \\right ) \\times 100\\] , \\(V_{EC_{}}\\) variance EC \\(\\)th trait, \\(V_{CS_{}}\\) variance CS \\(\\)th trait \\(n\\) total number traits. \\[\\overline{d}D\\% = \\frac{\\overline{d}_{CS}-\\overline{d}_{EC}}{\\overline{d}_{EC}} \\times 100\\] , \\(\\overline{d}_{CS}\\) mean squared Euclidean distance among accessions CS \\(\\overline{d}_{EC}\\) mean squared Euclidean distance among accessions EC. Percentage range ratios smaller 0.70 (Diwan et al. 1995)  computed follows. \\[RR\\%_{0.7} = \\left ( \\frac{S_{RR_{0.7}}}{n} \\right ) \\times 100\\] , \\(S_{RR_{0.7}}\\) number traits range ratio smaller 0.7 (\\(\\frac{R_{CS_{}}}{R_{EC_{}}} \\(R_{CS_{}}\\) range \\(\\)th trait CS, \\(R_{EC_{}}\\) range \\(\\)th trait EC \\(n\\) total number traits.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/percentdiff.evaluate.core.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Percentage Difference of Means and Variances — percentdiff.evaluate.core","text":"Diwan N, McIntosh MS, Bauchan GR (1995). “Methods developing core collection annual Medicago species.” Theoretical Applied Genetics, 90(6), 755–761. Hu J, Zhu J, Xu HM (2000). “Methods constructing core collections stepwise clustering three sampling strategies based genotypic values crops.” Theoretical Applied Genetics, 101(1), 264–268. Kim K, Chung H, Cho G, Ma K, Chandrabalan D, Gwag J, Kim T, Cho E, Park Y (2007). “PowerCore: program applying advanced M strategy heuristic search establishing core sets.” Bioinformatics, 23(16), 2155–2162. Studnicki M, Madry W, Schmidt J (2013). “Comparing efficiency sampling strategies establish representative phenotypic-based genetic diversity core collection orchardgrass (Dactylis glomerata L.).” Czech Journal Genetics Plant Breeding, 49(1), 36–47.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/EvaluateCore/reference/percentdiff.evaluate.core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Percentage Difference of Means and Variances — percentdiff.evaluate.core","text":"","code":"data(\"cassava_CC\") data(\"cassava_EC\")  ec <- cbind(genotypes = rownames(cassava_EC), cassava_EC) ec$genotypes <- as.character(ec$genotypes) rownames(ec) <- NULL  core <- rownames(cassava_CC)  quant <- c(\"NMSR\", \"TTRN\", \"TFWSR\", \"TTRW\", \"TFWSS\", \"TTSW\", \"TTPW\", \"AVPW\",            \"ARSR\", \"SRDM\") qual <- c(\"CUAL\", \"LNGS\", \"PTLC\", \"DSTA\", \"LFRT\", \"LBTEF\", \"CBTR\", \"NMLB\",           \"ANGB\", \"CUAL9M\", \"LVC9M\", \"TNPR9M\", \"PL9M\", \"STRP\", \"STRC\",           \"PSTR\")  ec[, qual] <- lapply(ec[, qual],                      function(x) factor(as.factor(x)))  percentdiff.evaluate.core(data = ec, names = \"genotypes\",                           quantitative = quant, selected = core) #>   MDPercent_Hu VDPercent_Hu MDPercent_Kim VDPercent_Kim DDPercent RR #> 1           50           80      13.02737      41.64331   18.2052 20"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/qq.evaluate.core.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantile-Quantile Plots — qq.evaluate.core","title":"Quantile-Quantile Plots — qq.evaluate.core","text":"Plot Quantile-Quantile (QQ) plots (Wilk Gnanadesikan 1968)  graphically compare probability distributions quantitative traits entire collection (EC) core set (CS).","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/qq.evaluate.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantile-Quantile Plots — qq.evaluate.core","text":"","code":"qq.evaluate.core(   data,   names,   quantitative,   selected,   annotate = c(\"none\", \"kl\", \"ks\", \"ad\") )"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/qq.evaluate.core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantile-Quantile Plots — qq.evaluate.core","text":"data data data frame object. data frame possess one row per individual columns individual names multiple trait/character data. names Name column individual names character string. quantitative Name columns quantitative traits character vector. selected Character vector names individuals selected core collection present names column. annotate Adds divergence/distance value probability distributions CS EC annotation QQ plot. Either \"none\" (annotation (Default)) \"kl\" (Kullback-Leibler divergence)  \"ks\" (Kolmogorov-Smirnov distance)  \"ad\" (Anderson-Darling distance).","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/qq.evaluate.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantile-Quantile Plots — qq.evaluate.core","text":"list ggplot objects QQ plots CS vs EC   trait specified quantitative.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/qq.evaluate.core.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Quantile-Quantile Plots — qq.evaluate.core","text":"Wilk MB, Gnanadesikan R (1968). “Probability plotting methods analysis analysis data.” Biometrika, 55(1), 1–17.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/EvaluateCore/reference/qq.evaluate.core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quantile-Quantile Plots — qq.evaluate.core","text":"","code":"data(\"cassava_CC\") data(\"cassava_EC\")  ec <- cbind(genotypes = rownames(cassava_EC), cassava_EC) ec$genotypes <- as.character(ec$genotypes) rownames(ec) <- NULL  core <- rownames(cassava_CC)  quant <- c(\"NMSR\", \"TTRN\", \"TFWSR\", \"TTRW\", \"TFWSS\", \"TTSW\", \"TTPW\", \"AVPW\",            \"ARSR\", \"SRDM\") qual <- c(\"CUAL\", \"LNGS\", \"PTLC\", \"DSTA\", \"LFRT\", \"LBTEF\", \"CBTR\", \"NMLB\",           \"ANGB\", \"CUAL9M\", \"LVC9M\", \"TNPR9M\", \"PL9M\", \"STRP\", \"STRC\",           \"PSTR\")  ec[, qual] <- lapply(ec[, qual],                      function(x) factor(as.factor(x)))  qq.evaluate.core(data = ec, names = \"genotypes\",                  quantitative = quant, selected = core) #> $NMSR  #>  #> $TTRN  #>  #> $TFWSR  #>  #> $TTRW  #>  #> $TFWSS  #>  #> $TTSW  #>  #> $TTPW  #>  #> $AVPW  #>  #> $ARSR  #>  #> $SRDM  #>   qq.evaluate.core(data = ec, names = \"genotypes\",                  quantitative = quant, selected = core, annotate = \"kl\") #> $NMSR  #>  #> $TTRN  #>  #> $TFWSR  #>  #> $TTRW  #>  #> $TFWSS  #>  #> $TTSW  #>  #> $TTPW  #>  #> $AVPW  #>  #> $ARSR  #>  #> $SRDM  #>   qq.evaluate.core(data = ec, names = \"genotypes\",                  quantitative = quant, selected = core, annotate = \"ks\") #> Warning: p-value will be approximate in the presence of ties #> Warning: p-value will be approximate in the presence of ties #> Warning: p-value will be approximate in the presence of ties #> Warning: p-value will be approximate in the presence of ties #> Warning: p-value will be approximate in the presence of ties #> Warning: p-value will be approximate in the presence of ties #> Warning: p-value will be approximate in the presence of ties #> Warning: p-value will be approximate in the presence of ties #> Warning: p-value will be approximate in the presence of ties #> Warning: p-value will be approximate in the presence of ties #> $NMSR  #>  #> $TTRN  #>  #> $TFWSR  #>  #> $TTRW  #>  #> $TFWSS  #>  #> $TTSW  #>  #> $TTPW  #>  #> $AVPW  #>  #> $ARSR  #>  #> $SRDM  #>   qq.evaluate.core(data = ec, names = \"genotypes\",                  quantitative = quant, selected = core, annotate = \"ad\") #> $NMSR  #>  #> $TTRN  #>  #> $TFWSR  #>  #> $TTRW  #>  #> $TFWSS  #>  #> $TTSW  #>  #> $TTPW  #>  #> $AVPW  #>  #> $ARSR  #>  #> $SRDM  #>"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/rpr.evaluate.core.html","id":null,"dir":"Reference","previous_headings":"","what":"Ratio of Phenotype Retained — rpr.evaluate.core","title":"Ratio of Phenotype Retained — rpr.evaluate.core","text":"Compute Ratio Phenotype Retained (\\(RPR\\)) (Li et al. 2002)  compare qualitative traits entire collection (EC) core set (CS).","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/rpr.evaluate.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ratio of Phenotype Retained — rpr.evaluate.core","text":"","code":"rpr.evaluate.core(data, names, qualitative, selected)"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/rpr.evaluate.core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ratio of Phenotype Retained — rpr.evaluate.core","text":"data data data frame object. data frame possess one row per individual columns individual names multiple trait/character data. names Name column individual names character string. qualitative Name columns qualitative traits character vector. selected Character vector names individuals selected core collection present names column.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/rpr.evaluate.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ratio of Phenotype Retained — rpr.evaluate.core","text":"Ratio Phenotype Retained value.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/rpr.evaluate.core.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ratio of Phenotype Retained — rpr.evaluate.core","text":"Ratio Phenotype Retained (\\(RPR\\)) (Kim et al. 2007)  computed follows. \\[RPR = \\frac{\\sum_{=1}^{n} k_{CS_{}}}{\\sum_{=1}^{n} k_{EC_{}}}\\] , \\(k_{CS_{}}\\) number phenotypic classes CS \\(\\)th trait, \\(k_{EC_{}}\\) number phenotypic classes EC \\(\\)th trait \\(n\\) total number traits.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/rpr.evaluate.core.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ratio of Phenotype Retained — rpr.evaluate.core","text":"Kim K, Chung H, Cho G, Ma K, Chandrabalan D, Gwag J, Kim T, Cho E, Park Y (2007). “PowerCore: program applying advanced M strategy heuristic search establishing core sets.” Bioinformatics, 23(16), 2155–2162. Li Z, Zhang H, Zeng Y, Yang Z, Shen S, Sun C, Wang X (2002). “Studies sampling schemes establishment corecollection rice landraces Yunnan, China.” Genetic Resources Crop Evolution, 49(1), 67–74.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/rpr.evaluate.core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ratio of Phenotype Retained — rpr.evaluate.core","text":"","code":"data(\"cassava_CC\") data(\"cassava_EC\")  ec <- cbind(genotypes = rownames(cassava_EC), cassava_EC) ec$genotypes <- as.character(ec$genotypes) rownames(ec) <- NULL  core <- rownames(cassava_CC)  quant <- c(\"NMSR\", \"TTRN\", \"TFWSR\", \"TTRW\", \"TFWSS\", \"TTSW\", \"TTPW\", \"AVPW\",            \"ARSR\", \"SRDM\") qual <- c(\"CUAL\", \"LNGS\", \"PTLC\", \"DSTA\", \"LFRT\", \"LBTEF\", \"CBTR\", \"NMLB\",           \"ANGB\", \"CUAL9M\", \"LVC9M\", \"TNPR9M\", \"PL9M\", \"STRP\", \"STRC\",           \"PSTR\")  ec[, qual] <- lapply(ec[, qual],                      function(x) factor(as.factor(x)))  rpr.evaluate.core(data = ec, names = \"genotypes\",                   qualitative = qual, selected = core) #> [1] 0.9315068"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/scv.evaluate.core.html","id":null,"dir":"Reference","previous_headings":"","what":"Synthetic Variation Coefficient — scv.evaluate.core","title":"Synthetic Variation Coefficient — scv.evaluate.core","text":"Compute Synthetic Variation Coefficient (\\(CV\\%\\)) (Dong 1998; Dong et al. 2001)  compare quantitative traits entire collection (EC) core set (CS).","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/scv.evaluate.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synthetic Variation Coefficient — scv.evaluate.core","text":"","code":"scv.evaluate.core(data, names, quantitative, selected)"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/scv.evaluate.core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Synthetic Variation Coefficient — scv.evaluate.core","text":"data data data frame object. data frame possess one row per individual columns individual names multiple trait/character data. names Name column individual names character string. quantitative Name columns quantitative traits character vector. selected Character vector names individuals selected core collection present names column.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/scv.evaluate.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Synthetic Variation Coefficient — scv.evaluate.core","text":"Synthetic Variation Coefficient values EC CS","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/scv.evaluate.core.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Synthetic Variation Coefficient — scv.evaluate.core","text":"Synthetic Variation Coefficient (\\(CV\\%\\)) (Dong 1998; Dong et al. 2001)  computed follows core set (CS). \\[CV(\\%) = \\left ( \\frac{1}{n} \\sum_{=1}^{n} \\frac{SE_{j}}{\\mu_{}}  \\right ) \\times 100\\] , \\(SE_{}\\) standard error \\(\\)th trait, \\(\\mu_{}\\) mean \\(\\)th trait \\(n\\) total number traits.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/scv.evaluate.core.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Synthetic Variation Coefficient — scv.evaluate.core","text":"Dong YS (1998). “Exploration genetic diversity center cultivated soybean China.” Chinese Crops Journal, 1, 18–19. Dong YS, Zhuang BC, Zhao LM, Sun H, (2001). “genetic diversity annual wild soybeans grown China.” Theoretical Applied Genetics, 103(1), 98–103.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/scv.evaluate.core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synthetic Variation Coefficient — scv.evaluate.core","text":"","code":"data(\"cassava_CC\") data(\"cassava_EC\")  ec <- cbind(genotypes = rownames(cassava_EC), cassava_EC) ec$genotypes <- as.character(ec$genotypes) rownames(ec) <- NULL  core <- rownames(cassava_CC)  quant <- c(\"NMSR\", \"TTRN\", \"TFWSR\", \"TTRW\", \"TFWSS\", \"TTSW\", \"TTPW\", \"AVPW\",            \"ARSR\", \"SRDM\") qual <- c(\"CUAL\", \"LNGS\", \"PTLC\", \"DSTA\", \"LFRT\", \"LBTEF\", \"CBTR\", \"NMLB\",           \"ANGB\", \"CUAL9M\", \"LVC9M\", \"TNPR9M\", \"PL9M\", \"STRP\", \"STRC\",           \"PSTR\")  ec[, qual] <- lapply(ec[, qual],                       function(x) factor(as.factor(x)))  scv.evaluate.core(data = ec, names = \"genotypes\",                   quantitative = quant, selected = core) #>   EC_SCV   CS_SCV  #> 10.75148 41.67945"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/shannon.evaluate.core-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Shannon-Weaver Diversity Index — shannon.evaluate.core-deprecated","title":"Shannon-Weaver Diversity Index — shannon.evaluate.core-deprecated","text":"Compute Shannon-Weaver Diversity Index (\\(H'\\)), Maximum diversity (\\(H'_{max}\\)) Shannon Equitability Index (\\(E_{H}\\)) (Shannon Weaver 1949)  compare phenotypic diversity qualitative traits entire collection (EC) core set (CS).","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/shannon.evaluate.core-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shannon-Weaver Diversity Index — shannon.evaluate.core-deprecated","text":"","code":"shannon.evaluate.core(data, names, qualitative, selected)"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/shannon.evaluate.core-deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shannon-Weaver Diversity Index — shannon.evaluate.core-deprecated","text":"data frame following columns. Trait qualitative   trait. EC_H Shannon-Weaver Diversity Index (\\(H'\\))   EC. EC_H Shannon-Weaver Diversity Index (\\(H'\\)) CS. EC_Hmax Maximum diversity value (\\(H'_{max}\\)) EC. CS_Hmax Maximum diversity value (\\(H'_{max}\\)) CS. EC_EH Shannon Equitability Index (\\(E_{H}\\)) EC. CS_EH Shannon Equitability Index (\\(E_{H}\\)) CS.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/shannon.evaluate.core-deprecated.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shannon-Weaver Diversity Index — shannon.evaluate.core-deprecated","text":"Shannon-Weaver Diversity Index (\\(H'\\)) computed follows. \\[H' = -\\sum_{=1}^{k}p_{} \\ln(p_{})\\] \\(p_{}\\) denotes proportion group \\(k\\). maximum value index (\\(H'_{max}\\)) \\(\\ln(k)\\). value occurs group frequency. Shannon equitability index (\\(E_{H}\\)) Shannon diversity index divided maximum diversity. \\[E_{H} = \\frac{H'}{\\ln{(k)}}\\]","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/shannon.evaluate.core-deprecated.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Shannon-Weaver Diversity Index — shannon.evaluate.core-deprecated","text":"Shannon CE, Weaver W (1949). Mathematical Theory Communication,  number v. 2 Mathematical Theory Communication. University Illinois Press.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/EvaluateCore/reference/shannon.evaluate.core-deprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shannon-Weaver Diversity Index — shannon.evaluate.core-deprecated","text":"","code":"data(\"cassava_CC\") data(\"cassava_EC\")  ec <- cbind(genotypes = rownames(cassava_EC), cassava_EC) ec$genotypes <- as.character(ec$genotypes) rownames(ec) <- NULL  core <- rownames(cassava_CC)  quant <- c(\"NMSR\", \"TTRN\", \"TFWSR\", \"TTRW\", \"TFWSS\", \"TTSW\", \"TTPW\", \"AVPW\",            \"ARSR\", \"SRDM\") qual <- c(\"CUAL\", \"LNGS\", \"PTLC\", \"DSTA\", \"LFRT\", \"LBTEF\", \"CBTR\", \"NMLB\",           \"ANGB\", \"CUAL9M\", \"LVC9M\", \"TNPR9M\", \"PL9M\", \"STRP\", \"STRC\",           \"PSTR\")  ec[, qual] <- lapply(ec[, qual],                      function(x) factor(as.factor(x)))  shannon.evaluate.core(data = ec, names = \"genotypes\",                       qualitative = qual, selected = core) #> Warning: `shannon.evaluate.core()` was deprecated in EvaluateCore 0.1.3. #> Please use `diversity.evaluate.core()` instead. #>     Trait      EC_H      CS_H   EC_Hmax   CS_Hmax     EC_EH     CS_EH #> 1    CUAL 1.1098536 1.1139942 1.6094379 1.3862944 0.6895908 0.8035770 #> 2    LNGS 0.9332401 1.0042425 1.0986123 1.0986123 0.8494718 0.9141009 #> 3    PTLC 0.8994139 1.1137849 1.6094379 1.6094379 0.5588373 0.6920334 #> 4    DSTA 1.2145172 1.3492284 1.6094379 1.6094379 0.7546220 0.8383227 #> 5    LFRT 0.9150959 0.9661827 1.6094379 1.3862944 0.5685810 0.6969535 #> 6   LBTEF 1.5672607 1.6518891 1.7917595 1.7917595 0.8747048 0.9219369 #> 7    CBTR 0.7273939 0.7786690 1.0986123 1.0986123 0.6621025 0.7087751 #> 8    NMLB 1.7054447 1.7750146 2.3025851 2.1972246 0.7406652 0.8078440 #> 9    ANGB 1.1310864 1.1762716 1.3862944 1.3862944 0.8159064 0.8485006 #> 10 CUAL9M 1.2608051 1.3356118 1.6094379 1.6094379 0.7833823 0.8298622 #> 11  LVC9M 1.0104787 1.1069704 1.6094379 1.6094379 0.6278457 0.6877994 #> 12 TNPR9M 1.4967570 1.5577108 1.6094379 1.6094379 0.9299874 0.9678601 #> 13   PL9M 0.7097358 0.6928637 1.0986123 0.6931472 0.6460294 0.9995910 #> 14   STRP 1.1816193 1.2124597 1.3862944 1.3862944 0.8523582 0.8746048 #> 15   STRC 0.6827857 0.6748953 0.6931472 0.6931472 0.9850516 0.9736681 #> 16   PSTR 0.6466388 0.6365142 1.0986123 0.6931472 0.5885960 0.9182958"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/signtest.evaluate.core.html","id":null,"dir":"Reference","previous_headings":"","what":"Sign Test — signtest.evaluate.core","title":"Sign Test — signtest.evaluate.core","text":"Test difference means variances entire collection (EC) core set (CS) quantitative traits Sign test (\\(+\\) versus \\(-\\)) (Basigalup et al. 1995; Tai Miller 2001) .","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/signtest.evaluate.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sign Test — signtest.evaluate.core","text":"","code":"signtest.evaluate.core(data, names, quantitative, selected)"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/signtest.evaluate.core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sign Test — signtest.evaluate.core","text":"data data data frame object. data frame possess one row per individual columns individual names multiple trait/character data. names Name column individual names character string quantitative Name columns quantitative traits character vector. selected Character vector names individuals selected core collection present names column.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/signtest.evaluate.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sign Test — signtest.evaluate.core","text":"data frame following components. Comparison   comparison measure. ChiSq test statistic (\\(\\chi^{2}\\)). p.value p value test statistic. significance   significance test statistic (*: p \\(\\leq\\) 0.01; **: p   \\(\\leq\\) 0.05; ns: p \\( > \\) 0.05).","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/signtest.evaluate.core.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sign Test — signtest.evaluate.core","text":"test statistic Sign test (\\(\\chi^{2}\\)) computed follows. \\[\\chi^{2} = \\frac{(N_{1}-N_{2})^{2}}{N_{1}+N_{2}}\\] , \\(N_{1}\\) number variables mean variance CS greater mean variance EC (number \\(+\\) signs); \\(N_{2}\\) number variables mean variance CS less mean variance EC (number \\(-\\) signs). value \\(\\chi^{2}\\) compared Chi-square distribution 1 degree freedom.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/signtest.evaluate.core.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sign Test — signtest.evaluate.core","text":"Basigalup DH, Barnes DK, Stucker RE (1995). “Development core collection perennial Medicago plant introductions.” Crop Science, 35(4), 1163–1168. Tai PYP, Miller JD (2001). “Core Collection Saccharum spontaneum L. World Collection Sugarcane.” Crop Science, 41(3), 879–885.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/signtest.evaluate.core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sign Test — signtest.evaluate.core","text":"","code":"data(\"cassava_CC\") data(\"cassava_EC\")  ec <- cbind(genotypes = rownames(cassava_EC), cassava_EC) ec$genotypes <- as.character(ec$genotypes) rownames(ec) <- NULL  core <- rownames(cassava_CC)  quant <- c(\"NMSR\", \"TTRN\", \"TFWSR\", \"TTRW\", \"TFWSS\", \"TTSW\", \"TTPW\", \"AVPW\",            \"ARSR\", \"SRDM\") qual <- c(\"CUAL\", \"LNGS\", \"PTLC\", \"DSTA\", \"LFRT\", \"LBTEF\", \"CBTR\", \"NMLB\",           \"ANGB\", \"CUAL9M\", \"LVC9M\", \"TNPR9M\", \"PL9M\", \"STRP\", \"STRC\",           \"PSTR\")  ec[, qual] <- lapply(ec[, qual],                      function(x) factor(as.factor(x)))  signtest.evaluate.core(data = ec, names = \"genotypes\",                        quantitative = quant, selected = core) #>   Comparison ChiSq    p.value significance #> 1       Mean   1.6 0.20590321           ns #> 2   Variance   3.6 0.05777957           ns"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/snk.evaluate.core.html","id":null,"dir":"Reference","previous_headings":"","what":"Student-Newman-Keuls Test — snk.evaluate.core","title":"Student-Newman-Keuls Test — snk.evaluate.core","text":"Test difference means entire collection (EC) core set (CS) quantitative traits Newman-Keuls Student-Newman-Keuls test (Newman 1939; Keuls 1952) .","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/snk.evaluate.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Student-Newman-Keuls Test — snk.evaluate.core","text":"","code":"snk.evaluate.core(data, names, quantitative, selected)"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/snk.evaluate.core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Student-Newman-Keuls Test — snk.evaluate.core","text":"data data data frame object. data frame possess one row per individual columns individual names multiple trait/character data. names Name column individual names character string. quantitative Name columns quantitative traits character vector. selected Character vector names individuals selected core collection present names column.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/snk.evaluate.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Student-Newman-Keuls Test — snk.evaluate.core","text":"data frame following components. Trait   quantitative trait. EC_Min minimum value trait EC. EC_Max maximum value trait EC. EC_Mean   mean value trait EC. EC_SE standard error   trait EC. CS_Min minimum value trait CS. CS_Max maximum value trait CS. CS_Mean   mean value trait CS. CS_SE standard error   trait CS. SNK_pvalue p value Student-Newman-Keuls   test equality means EC CS. SNK_significance   significance Student-Newman-Keuls test equality means EC   CS.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/snk.evaluate.core.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Student-Newman-Keuls Test — snk.evaluate.core","text":"Keuls M (1952). “use ,,studentized range\" connection analysis variance.” Euphytica, 1(2), 112–122. Newman D (1939). “distribution range samples normal population, expressed terms independent estimate standard deviation.” Biometrika, 31(1-2), 20–30.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/EvaluateCore/reference/snk.evaluate.core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Student-Newman-Keuls Test — snk.evaluate.core","text":"","code":"data(\"cassava_CC\") data(\"cassava_EC\")  ec <- cbind(genotypes = rownames(cassava_EC), cassava_EC) ec$genotypes <- as.character(ec$genotypes) rownames(ec) <- NULL  core <- rownames(cassava_CC)  quant <- c(\"NMSR\", \"TTRN\", \"TFWSR\", \"TTRW\", \"TFWSS\", \"TTSW\", \"TTPW\", \"AVPW\",            \"ARSR\", \"SRDM\") qual <- c(\"CUAL\", \"LNGS\", \"PTLC\", \"DSTA\", \"LFRT\", \"LBTEF\", \"CBTR\", \"NMLB\",           \"ANGB\", \"CUAL9M\", \"LVC9M\", \"TNPR9M\", \"PL9M\", \"STRP\", \"STRC\",           \"PSTR\")  ec[, qual] <- lapply(ec[, qual],                      function(x) factor(as.factor(x)))  snk.evaluate.core(data = ec, names = \"genotypes\",                   quantitative = quant, selected = core) #>    Trait EC_Min EC_Max   EC_Mean      EC_SE CS_Min CS_Max   CS_Mean     CS_SE #> 1   NMSR   1.00  55.00 11.722090 0.18731651   1.00  55.00 10.892857 0.6314310 #> 2   TTRN   0.25  13.75  3.853909 0.04656232   0.25  13.75  3.930655 0.1754066 #> 3  TFWSR   0.00  40.00  5.428979 0.11045567   0.20  38.00  6.348214 0.4696134 #> 4   TTRW   0.00  20.20  1.897948 0.04037796   0.10  20.20  2.617817 0.2207393 #> 5  TFWSS   0.20  42.00  6.943052 0.14359496   0.20  42.00  7.748214 0.5588314 #> 6   TTSW   0.04  22.00  2.387502 0.04878843   0.10  22.00  3.069087 0.2381436 #> 7   TTPW   0.40  80.00 12.372031 0.23851356   0.40  80.00 14.096429 0.9720528 #> 8   AVPW   0.20  33.00  4.285450 0.08195995   0.20  33.00  5.686905 0.4210897 #> 9   ARSR   0.00  18.00  1.858076 0.05493488   0.00   8.00  1.702381 0.1516377 #> 10  SRDM   0.50  48.90 37.771021 0.12264395  21.90  48.10 37.730357 0.3289992 #>    SNK_pvalue SNK_significance #> 1      0.1852               ns #> 2      0.6261               ns #> 3      0.0156                * #> 4      0.0000               ** #> 5      0.0989               ns #> 6      0.0001               ** #> 7      0.0345                * #> 8      0.0000               ** #> 9      0.3882               ns #> 10     0.9194               ns"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/ttest.evaluate.core.html","id":null,"dir":"Reference","previous_headings":"","what":"Student's t Test — ttest.evaluate.core","title":"Student's t Test — ttest.evaluate.core","text":"Test difference means entire collection (EC) core set (CS) quantitative traits Student's t test (Student 1908) .","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/ttest.evaluate.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Student's t Test — ttest.evaluate.core","text":"","code":"ttest.evaluate.core(data, names, quantitative, selected)"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/ttest.evaluate.core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Student's t Test — ttest.evaluate.core","text":"data data data frame object. data frame possess one row per individual columns individual names multiple trait/character data. names Name column individual names character string. quantitative Name columns quantitative traits character vector. selected Character vector names individuals selected core collection present names column.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/ttest.evaluate.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Student's t Test — ttest.evaluate.core","text":"Trait   quantitative trait. EC_Min minimum value trait EC. EC_Max maximum value trait EC. EC_Mean   mean value trait EC. EC_SE standard error   trait EC. CS_Min minimum value trait CS. CS_Max maximum value trait CS. CS_Mean   mean value trait CS. CS_SE standard error   trait CS. ttest_pvalue p value Student's t   test equality means EC CS. ttest_significance   significance Student's t test equality means EC   CS.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/ttest.evaluate.core.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Student's t Test — ttest.evaluate.core","text":"Student (1908). “probable error mean.” Biometrika, 6(1), 1–25.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/EvaluateCore/reference/ttest.evaluate.core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Student's t Test — ttest.evaluate.core","text":"","code":"data(\"cassava_CC\") data(\"cassava_EC\")  ec <- cbind(genotypes = rownames(cassava_EC), cassava_EC) ec$genotypes <- as.character(ec$genotypes) rownames(ec) <- NULL  core <- rownames(cassava_CC)  quant <- c(\"NMSR\", \"TTRN\", \"TFWSR\", \"TTRW\", \"TFWSS\", \"TTSW\", \"TTPW\", \"AVPW\",            \"ARSR\", \"SRDM\") qual <- c(\"CUAL\", \"LNGS\", \"PTLC\", \"DSTA\", \"LFRT\", \"LBTEF\", \"CBTR\", \"NMLB\",           \"ANGB\", \"CUAL9M\", \"LVC9M\", \"TNPR9M\", \"PL9M\", \"STRP\", \"STRC\",           \"PSTR\")  ec[, qual] <- lapply(ec[, qual],                      function(x) factor(as.factor(x)))  ttest.evaluate.core(data = ec, names = \"genotypes\",                     quantitative = quant, selected = core) #>    Trait EC_Min EC_Max   EC_Mean      EC_SE CS_Min CS_Max   CS_Mean     CS_SE #> 1   NMSR   1.00  55.00 11.722090 0.18731651   1.00  55.00 10.892857 0.6314310 #> 2   TTRN   0.25  13.75  3.853909 0.04656232   0.25  13.75  3.930655 0.1754066 #> 3  TFWSR   0.00  40.00  5.428979 0.11045567   0.20  38.00  6.348214 0.4696134 #> 4   TTRW   0.00  20.20  1.897948 0.04037796   0.10  20.20  2.617817 0.2207393 #> 5  TFWSS   0.20  42.00  6.943052 0.14359496   0.20  42.00  7.748214 0.5588314 #> 6   TTSW   0.04  22.00  2.387502 0.04878843   0.10  22.00  3.069087 0.2381436 #> 7   TTPW   0.40  80.00 12.372031 0.23851356   0.40  80.00 14.096429 0.9720528 #> 8   AVPW   0.20  33.00  4.285450 0.08195995   0.20  33.00  5.686905 0.4210897 #> 9   ARSR   0.00  18.00  1.858076 0.05493488   0.00   8.00  1.702381 0.1516377 #> 10  SRDM   0.50  48.90 37.771021 0.12264395  21.90  48.10 37.730357 0.3289992 #>    ttest_pvalue ttest_significance #> 1   0.209505833                 ns #> 2   0.672855738                 ns #> 3   0.058266745                 ns #> 4   0.001585008                 ** #> 5   0.164507433                 ns #> 6   0.005599998                 ** #> 7   0.086559633                 ns #> 8   0.001302429                 ** #> 9   0.335457319                 ns #> 10  0.907907091                 ns"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/vpf.evaluate.core.html","id":null,"dir":"Reference","previous_headings":"","what":"Variance of Phenotypic Frequency — vpf.evaluate.core","title":"Variance of Phenotypic Frequency — vpf.evaluate.core","text":"Compute Variance Phenotypic Frequency (\\(VPF\\)) (Li et al. 2002)  compare qualitative traits entire collection (EC) core set (CS).","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/vpf.evaluate.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variance of Phenotypic Frequency — vpf.evaluate.core","text":"","code":"vpf.evaluate.core(data, names, qualitative, selected)"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/vpf.evaluate.core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variance of Phenotypic Frequency — vpf.evaluate.core","text":"data data data frame object. data frame possess one row per individual columns individual names multiple trait/character data. names Name column individual names character string. qualitative Name columns qualitative traits character vector. selected Character vector names individuals selected core collection present names column.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/vpf.evaluate.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variance of Phenotypic Frequency — vpf.evaluate.core","text":"Variance Phenotypic Frequency values EC CS.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/vpf.evaluate.core.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Variance of Phenotypic Frequency — vpf.evaluate.core","text":"Variance Phenotypic Frequency (\\(VPF\\)) (Li et al. 2002)  computed follows. \\[VPF = \\frac{1}{n} \\sum_{=1}^{n}\\left ( \\frac{\\sum_{j=1}^{k} (p_{ij} - \\overline{p_{}})^{2}}{k - 1} \\right )\\] , \\(p_{ij}\\) denotes proportion/fraction/frequency accessions \\(\\)th phenotypic class \\(\\)th trait, \\(\\overline{p_{}}\\) mean frequency phenotypic classes \\(\\)th trait, \\(k\\) number phenotypic classes \\(\\)th trait \\(n\\) total number traits.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/vpf.evaluate.core.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Variance of Phenotypic Frequency — vpf.evaluate.core","text":"Li Z, Zhang H, Zeng Y, Yang Z, Shen S, Sun C, Wang X (2002). “Studies sampling schemes establishment corecollection rice landraces Yunnan, China.” Genetic Resources Crop Evolution, 49(1), 67–74.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/vpf.evaluate.core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variance of Phenotypic Frequency — vpf.evaluate.core","text":"","code":"data(\"cassava_CC\") data(\"cassava_EC\")  ec <- cbind(genotypes = rownames(cassava_EC), cassava_EC) ec$genotypes <- as.character(ec$genotypes) rownames(ec) <- NULL  core <- rownames(cassava_CC)  quant <- c(\"NMSR\", \"TTRN\", \"TFWSR\", \"TTRW\", \"TFWSS\", \"TTSW\", \"TTPW\", \"AVPW\",            \"ARSR\", \"SRDM\") qual <- c(\"CUAL\", \"LNGS\", \"PTLC\", \"DSTA\", \"LFRT\", \"LBTEF\", \"CBTR\", \"NMLB\",           \"ANGB\", \"CUAL9M\", \"LVC9M\", \"TNPR9M\", \"PL9M\", \"STRP\", \"STRC\",           \"PSTR\")  ec[, qual] <- lapply(ec[, qual],                      function(x) factor(as.factor(x)))  vpf.evaluate.core(data = ec, names = \"genotypes\",                   qualitative = qual, selected = core) #>     EC_VPF     CS_VPF  #> 0.04573206 0.03154146"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/vr.evaluate.core.html","id":null,"dir":"Reference","previous_headings":"","what":"Variable Rate of Coefficient of Variation — vr.evaluate.core","title":"Variable Rate of Coefficient of Variation — vr.evaluate.core","text":"Compute Variable Rate Coefficient Variation (\\(VR\\)) (Hu et al. 2000)  compare quantitative traits entire collection (EC) core set (CS).","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/vr.evaluate.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variable Rate of Coefficient of Variation — vr.evaluate.core","text":"","code":"vr.evaluate.core(data, names, quantitative, selected)"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/vr.evaluate.core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variable Rate of Coefficient of Variation — vr.evaluate.core","text":"data data data frame object. data frame possess one row per individual columns individual names multiple trait/character data. names Name column individual names character string. quantitative Name columns quantitative traits character vector. selected Character vector names individuals selected core collection present names column.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/vr.evaluate.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variable Rate of Coefficient of Variation — vr.evaluate.core","text":"\\(VR\\) value.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/vr.evaluate.core.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Variable Rate of Coefficient of Variation — vr.evaluate.core","text":"Variable Rate Coefficient Variation (\\(VR\\)) computed follows. \\[VR = \\left ( \\frac{1}{n} \\sum_{=1}^{n} \\frac{CV_{CS_{}}}{CV_{EC_{}}} \\right ) \\times 100\\] , \\(CV_{CS_{}}\\) coefficients variation \\(\\)th trait CS, \\(CV_{EC_{}}\\) coefficients variation \\(\\)th trait EC \\(n\\) total number traits","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/vr.evaluate.core.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Variable Rate of Coefficient of Variation — vr.evaluate.core","text":"Hu J, Zhu J, Xu HM (2000). “Methods constructing core collections stepwise clustering three sampling strategies based genotypic values crops.” Theoretical Applied Genetics, 101(1), 264–268.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/vr.evaluate.core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variable Rate of Coefficient of Variation — vr.evaluate.core","text":"","code":"data(\"cassava_CC\") data(\"cassava_EC\")  ec <- cbind(genotypes = rownames(cassava_EC), cassava_EC) ec$genotypes <- as.character(ec$genotypes) rownames(ec) <- NULL  core <- rownames(cassava_CC)  quant <- c(\"NMSR\", \"TTRN\", \"TFWSR\", \"TTRW\", \"TFWSS\", \"TTSW\", \"TTPW\", \"AVPW\",            \"ARSR\", \"SRDM\") qual <- c(\"CUAL\", \"LNGS\", \"PTLC\", \"DSTA\", \"LFRT\", \"LBTEF\", \"CBTR\", \"NMLB\",           \"ANGB\", \"CUAL9M\", \"LVC9M\", \"TNPR9M\", \"PL9M\", \"STRP\", \"STRC\",           \"PSTR\")  ec[, qual] <- lapply(ec[, qual],                      function(x) factor(as.factor(x)))  vr.evaluate.core(data = ec, names = \"genotypes\",                  quantitative = quant, selected = core) #> [1] 111.6594"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/wilcox.evaluate.core.html","id":null,"dir":"Reference","previous_headings":"","what":"Wilcoxon Rank Sum Test — wilcox.evaluate.core","title":"Wilcoxon Rank Sum Test — wilcox.evaluate.core","text":"Compare medians quantitative traits entire collection (EC) core set (CS) Wilcoxon rank sum test Mann-Whitney-Wilcoxon test Mann-Whitney U test (Wilcoxon 1945; Mann Whitney 1947) .","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/wilcox.evaluate.core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wilcoxon Rank Sum Test — wilcox.evaluate.core","text":"","code":"wilcox.evaluate.core(data, names, quantitative, selected)"},{"path":"https://aravind-j.github.io/EvaluateCore/reference/wilcox.evaluate.core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wilcoxon Rank Sum Test — wilcox.evaluate.core","text":"data data data frame object. data frame possess one row per individual columns individual names multiple trait/character data. names Name column individual names character string. quantitative Name columns quantitative traits character vector. selected Character vector names individuals selected core collection present names column.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/wilcox.evaluate.core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wilcoxon Rank Sum Test — wilcox.evaluate.core","text":"Trait quantitative trait. EC_Med median value   trait EC. CS_Med median value trait CS. Wilcox_pvalue p value Wilcoxon test equality   medians EC CS. Wilcox_significance significance   Wilcoxon test equality medians EC CS.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/reference/wilcox.evaluate.core.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Wilcoxon Rank Sum Test — wilcox.evaluate.core","text":"Mann HB, Whitney DR (1947). “test whether one two random variables stochastically larger .” Annals Mathematical Statistics, 18(1), 50–60. Wilcoxon F (1945). “Individual comparisons ranking methods.” Biometrics Bulletin, 1(6), 80.","code":""},{"path":[]},{"path":"https://aravind-j.github.io/EvaluateCore/reference/wilcox.evaluate.core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wilcoxon Rank Sum Test — wilcox.evaluate.core","text":"","code":"data(\"cassava_CC\") data(\"cassava_EC\")  ec <- cbind(genotypes = rownames(cassava_EC), cassava_EC) ec$genotypes <- as.character(ec$genotypes) rownames(ec) <- NULL  core <- rownames(cassava_CC)  quant <- c(\"NMSR\", \"TTRN\", \"TFWSR\", \"TTRW\", \"TFWSS\", \"TTSW\", \"TTPW\", \"AVPW\",            \"ARSR\", \"SRDM\") qual <- c(\"CUAL\", \"LNGS\", \"PTLC\", \"DSTA\", \"LFRT\", \"LBTEF\", \"CBTR\", \"NMLB\",           \"ANGB\", \"CUAL9M\", \"LVC9M\", \"TNPR9M\", \"PL9M\", \"STRP\", \"STRC\",           \"PSTR\")  ec[, qual] <- lapply(ec[, qual],                      function(x) factor(as.factor(x)))  wilcox.evaluate.core(data = ec, names = \"genotypes\",                      quantitative = quant, selected = core) #>    Trait    EC_Med    CS_Med Wilcox_pvalue Wilcox_significance #> 1   NMSR 10.000000  9.000000    0.07142419                  ns #> 2   TTRN  3.600000  3.500000    0.88120694                  ns #> 3  TFWSR  4.200000  4.300000    0.36146710                  ns #> 4   TTRW  1.445000  1.580000    0.05166795                  ns #> 5  TFWSS  5.400000  5.400000    0.59705438                  ns #> 6   TTSW  1.933333  2.058333    0.06454022                  ns #> 7   TTPW 10.000000 10.400000    0.41477324                  ns #> 8   AVPW  3.400000  3.600000    0.04066290                   * #> 9   ARSR  1.000000  1.000000    0.54494436                  ns #> 10  SRDM 38.500000 38.150000    0.38825006                  ns"},{"path":[]},{"path":"https://aravind-j.github.io/EvaluateCore/news/index.html","id":"new-functions-0-1-4","dir":"Changelog","previous_headings":"","what":"NEW FUNCTIONS:","title":"EvaluateCore 0.1.4","text":"rpr.evaluate.core - Added Ratio Phenotype Retained (Li et al., 2002). vpf.evaluate.core - Added Variance Phenotypic Frequency (Li et al., 2002). scv.evaluate.core - Added Synthetic Variation Coefficient (Dong, 1998; Dong et al., 2001).","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/news/index.html","id":"updated-functions-0-1-4","dir":"Changelog","previous_headings":"","what":"UPDATED FUNCTIONS:","title":"EvaluateCore 0.1.4","text":"cr.evaluate.core - Added computation Changeable Rate Maximum, Minimum Mean (Wang et al. 2007). percentdiff.evaluate.core - Added Percentage range ratios smaller 0.70 (Diwan et al. 1998).","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/news/index.html","id":"evaluatecore-013","dir":"Changelog","previous_headings":"","what":"EvaluateCore 0.1.3","title":"EvaluateCore 0.1.3","text":"CRAN release: 2022-07-03","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/news/index.html","id":"new-functions-0-1-3","dir":"Changelog","previous_headings":"","what":"NEW FUNCTIONS:","title":"EvaluateCore 0.1.3","text":"diversity.evaluate.core - Upgraded shannon.evaluate.core (now deprecated) even diversity indices.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/news/index.html","id":"updated-functions-0-1-3","dir":"Changelog","previous_headings":"","what":"UPDATED FUNCTIONS:","title":"EvaluateCore 0.1.3","text":"box.evaluate.core - Replace deprecated arg ggplot2::stat_summary. freqdist.evaluate.core - Fix x scale limit.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/news/index.html","id":"other-notes-0-1-3","dir":"Changelog","previous_headings":"","what":"OTHER NOTES:","title":"EvaluateCore 0.1.3","text":"Fixed minor typos bar.evaluate.core, dit.evaluate.core freqdist.evaluate.core. Fixed missing mathjaxr Namespace. Remove dependency ccChooser depreciated. Add cassava_EC cassava_CC datasets use examples instead ccChooser::dactylis_EC ccChooser::dactylis_CC.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/news/index.html","id":"evaluatecore-012","dir":"Changelog","previous_headings":"","what":"EvaluateCore 0.1.2","title":"EvaluateCore 0.1.2","text":"CRAN release: 2021-06-12","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/news/index.html","id":"other-notes-0-1-2","dir":"Changelog","previous_headings":"","what":"OTHER NOTES:","title":"EvaluateCore 0.1.2","text":"Converted equations Rd files MathJaxusing mathjaxr. Fixed ‘LazyData’ specified without ‘data’ directory (/data folder).","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/news/index.html","id":"evaluatecore-011","dir":"Changelog","previous_headings":"","what":"EvaluateCore 0.1.1","title":"EvaluateCore 0.1.1","text":"CRAN release: 2020-06-03 First release","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/news/index.html","id":"new-functions-0-1-1","dir":"Changelog","previous_headings":"","what":"NEW FUNCTIONS:","title":"EvaluateCore 0.1.1","text":"freqdist.evaluate.core - Plots frequency distribution histograms.","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/news/index.html","id":"evaluatecore-010","dir":"Changelog","previous_headings":"","what":"EvaluateCore 0.1.0","title":"EvaluateCore 0.1.0","text":"Pre-release","code":""},{"path":"https://aravind-j.github.io/EvaluateCore/news/index.html","id":"evaluatecore-0009000","dir":"Changelog","previous_headings":"","what":"EvaluateCore 0.0.0.9000","title":"EvaluateCore 0.0.0.9000","text":"Pre-release","code":""}]
